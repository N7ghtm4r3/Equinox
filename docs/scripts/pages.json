[
  {
    "name": "Auto",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Auto",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/-auto/index.html",
    "searchKeys": [
      "Auto",
      "Auto",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Auto"
    ]
  },
  {
    "name": "Dark",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Dark",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/-dark/index.html",
    "searchKeys": [
      "Dark",
      "Dark",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Dark"
    ]
  },
  {
    "name": "Light",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Light",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/-light/index.html",
    "searchKeys": [
      "Light",
      "Light",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.Light"
    ]
  },
  {
    "name": "abstract class DefaultEquinoxController : EquinoxController<T> ",
    "description": "com.tecknobit.equinox.environment.controllers.DefaultEquinoxController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-default-equinox-controller/index.html",
    "searchKeys": [
      "DefaultEquinoxController",
      "abstract class DefaultEquinoxController : EquinoxController<T> ",
      "com.tecknobit.equinox.environment.controllers.DefaultEquinoxController"
    ]
  },
  {
    "name": "abstract class EquinoxController<T : EquinoxUser?>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/index.html",
    "searchKeys": [
      "EquinoxController",
      "abstract class EquinoxController<T : EquinoxUser?>",
      "com.tecknobit.equinox.environment.controllers.EquinoxController"
    ]
  },
  {
    "name": "abstract class EquinoxItem",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/index.html",
    "searchKeys": [
      "EquinoxItem",
      "abstract class EquinoxItem",
      "com.tecknobit.equinox.environment.records.EquinoxItem"
    ]
  },
  {
    "name": "abstract class EquinoxLocalUser",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/index.html",
    "searchKeys": [
      "EquinoxLocalUser",
      "abstract class EquinoxLocalUser",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser"
    ]
  },
  {
    "name": "abstract class EquinoxRequester(var host: String, var userId: String? = null, var userToken: String? = null, var debugMode: Boolean = false, val connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, val connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, val enableCertificatesValidation: Boolean = false) : Requester",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/index.html",
    "searchKeys": [
      "EquinoxRequester",
      "abstract class EquinoxRequester(var host: String, var userId: String? = null, var userToken: String? = null, var debugMode: Boolean = false, val connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, val connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, val enableCertificatesValidation: Boolean = false) : Requester",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester"
    ]
  },
  {
    "name": "abstract class Requester(var host: String, var userId: String? = null, var userToken: String? = null, var debugMode: Boolean = false, val connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, val connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, val enableCertificatesValidation: Boolean = false)",
    "description": "com.tecknobit.equinox.Requester",
    "location": "-equinox/com.tecknobit.equinox/-requester/index.html",
    "searchKeys": [
      "Requester",
      "abstract class Requester(var host: String, var userId: String? = null, var userToken: String? = null, var debugMode: Boolean = false, val connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, val connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, val enableCertificatesValidation: Boolean = false)",
      "com.tecknobit.equinox.Requester"
    ]
  },
  {
    "name": "abstract fun canRefresherStart(): Boolean",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.canRefresherStart",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/can-refresher-start.html",
    "searchKeys": [
      "canRefresherStart",
      "abstract fun canRefresherStart(): Boolean",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.canRefresherStart"
    ]
  },
  {
    "name": "abstract fun changeEmail(newEmail: String, id: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/change-email.html",
    "searchKeys": [
      "changeEmail",
      "abstract fun changeEmail(newEmail: String, id: String)",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeEmail"
    ]
  },
  {
    "name": "abstract fun changeLanguage(newLanguage: String, id: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/change-language.html",
    "searchKeys": [
      "changeLanguage",
      "abstract fun changeLanguage(newLanguage: String, id: String)",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeLanguage"
    ]
  },
  {
    "name": "abstract fun changePassword(newPassword: String, id: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changePassword",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/change-password.html",
    "searchKeys": [
      "changePassword",
      "abstract fun changePassword(newPassword: String, id: String)",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changePassword"
    ]
  },
  {
    "name": "abstract fun changeProfilePic(profilePicUrl: String, id: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/change-profile-pic.html",
    "searchKeys": [
      "changeProfilePic",
      "abstract fun changeProfilePic(profilePicUrl: String, id: String)",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.changeProfilePic"
    ]
  },
  {
    "name": "abstract fun clear()",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.clear",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/clear.html",
    "searchKeys": [
      "clear",
      "abstract fun clear()",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.clear"
    ]
  },
  {
    "name": "abstract fun continueToFetch(currentContext: Class<*>): Boolean",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.continueToFetch",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/continue-to-fetch.html",
    "searchKeys": [
      "continueToFetch",
      "abstract fun continueToFetch(currentContext: Class<*>): Boolean",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.continueToFetch"
    ]
  },
  {
    "name": "abstract fun execRefreshingRoutine(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.execRefreshingRoutine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/exec-refreshing-routine.html",
    "searchKeys": [
      "execRefreshingRoutine",
      "abstract fun execRefreshingRoutine(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.execRefreshingRoutine"
    ]
  },
  {
    "name": "abstract fun findUserByEmail(email: String): T",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.findUserByEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/find-user-by-email.html",
    "searchKeys": [
      "findUserByEmail",
      "abstract fun findUserByEmail(email: String): T",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository.findUserByEmail"
    ]
  },
  {
    "name": "abstract fun order(): Array<String>",
    "description": "com.tecknobit.equinox.annotations.CustomParametersOrder.order",
    "location": "-equinox/com.tecknobit.equinox.annotations/-custom-parameters-order/order.html",
    "searchKeys": [
      "order",
      "abstract fun order(): Array<String>",
      "com.tecknobit.equinox.annotations.CustomParametersOrder.order"
    ]
  },
  {
    "name": "abstract fun refreshItem()",
    "description": "com.tecknobit.equinox.FetcherManager.ItemFetcher.refreshItem",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-item-fetcher/refresh-item.html",
    "searchKeys": [
      "refreshItem",
      "abstract fun refreshItem()",
      "com.tecknobit.equinox.FetcherManager.ItemFetcher.refreshItem"
    ]
  },
  {
    "name": "abstract fun refreshList()",
    "description": "com.tecknobit.equinox.FetcherManager.ListFetcher.refreshList",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-list-fetcher/refresh-list.html",
    "searchKeys": [
      "refreshList",
      "abstract fun refreshList()",
      "com.tecknobit.equinox.FetcherManager.ListFetcher.refreshList"
    ]
  },
  {
    "name": "abstract fun restartRefresher()",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.restartRefresher",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/restart-refresher.html",
    "searchKeys": [
      "restartRefresher",
      "abstract fun restartRefresher()",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.restartRefresher"
    ]
  },
  {
    "name": "abstract fun suspendRefresher()",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.suspendRefresher",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/suspend-refresher.html",
    "searchKeys": [
      "suspendRefresher",
      "abstract fun suspendRefresher()",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.suspendRefresher"
    ]
  },
  {
    "name": "annotation class CustomParametersOrder",
    "description": "com.tecknobit.equinox.annotations.CustomParametersOrder",
    "location": "-equinox/com.tecknobit.equinox.annotations/-custom-parameters-order/index.html",
    "searchKeys": [
      "CustomParametersOrder",
      "annotation class CustomParametersOrder",
      "com.tecknobit.equinox.annotations.CustomParametersOrder"
    ]
  },
  {
    "name": "class FetcherManager(val refreshRoutine: CoroutineScope)",
    "description": "com.tecknobit.equinox.FetcherManager",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/index.html",
    "searchKeys": [
      "FetcherManager",
      "class FetcherManager(val refreshRoutine: CoroutineScope)",
      "com.tecknobit.equinox.FetcherManager"
    ]
  },
  {
    "name": "const val DEFAULT_CONNECTION_ERROR_MESSAGE: String",
    "description": "com.tecknobit.equinox.Requester.Companion.DEFAULT_CONNECTION_ERROR_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/-d-e-f-a-u-l-t_-c-o-n-n-e-c-t-i-o-n_-e-r-r-o-r_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "DEFAULT_CONNECTION_ERROR_MESSAGE",
      "const val DEFAULT_CONNECTION_ERROR_MESSAGE: String",
      "com.tecknobit.equinox.Requester.Companion.DEFAULT_CONNECTION_ERROR_MESSAGE"
    ]
  },
  {
    "name": "const val RESPONSE_MESSAGE_KEY: String",
    "description": "com.tecknobit.equinox.Requester.Companion.RESPONSE_MESSAGE_KEY",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/-r-e-s-p-o-n-s-e_-m-e-s-s-a-g-e_-k-e-y.html",
    "searchKeys": [
      "RESPONSE_MESSAGE_KEY",
      "const val RESPONSE_MESSAGE_KEY: String",
      "com.tecknobit.equinox.Requester.Companion.RESPONSE_MESSAGE_KEY"
    ]
  },
  {
    "name": "const val RESPONSE_STATUS_KEY: String",
    "description": "com.tecknobit.equinox.Requester.Companion.RESPONSE_STATUS_KEY",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/-r-e-s-p-o-n-s-e_-s-t-a-t-u-s_-k-e-y.html",
    "searchKeys": [
      "RESPONSE_STATUS_KEY",
      "const val RESPONSE_STATUS_KEY: String",
      "com.tecknobit.equinox.Requester.Companion.RESPONSE_STATUS_KEY"
    ]
  },
  {
    "name": "const val USER_IDENTIFIER_KEY: String",
    "description": "com.tecknobit.equinox.Requester.Companion.USER_IDENTIFIER_KEY",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/-u-s-e-r_-i-d-e-n-t-i-f-i-e-r_-k-e-y.html",
    "searchKeys": [
      "USER_IDENTIFIER_KEY",
      "const val USER_IDENTIFIER_KEY: String",
      "com.tecknobit.equinox.Requester.Companion.USER_IDENTIFIER_KEY"
    ]
  },
  {
    "name": "const val USER_TOKEN_KEY: String",
    "description": "com.tecknobit.equinox.Requester.Companion.USER_TOKEN_KEY",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/-u-s-e-r_-t-o-k-e-n_-k-e-y.html",
    "searchKeys": [
      "USER_TOKEN_KEY",
      "const val USER_TOKEN_KEY: String",
      "com.tecknobit.equinox.Requester.Companion.USER_TOKEN_KEY"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.equinox.environment.controllers.DefaultEquinoxController.DefaultEquinoxController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-default-equinox-controller/-default-equinox-controller.html",
    "searchKeys": [
      "DefaultEquinoxController",
      "constructor()",
      "com.tecknobit.equinox.environment.controllers.DefaultEquinoxController.DefaultEquinoxController"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.EquinoxController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/-equinox-controller.html",
    "searchKeys": [
      "EquinoxController",
      "constructor()",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.EquinoxController"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.EquinoxUsersHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-equinox-users-helper.html",
    "searchKeys": [
      "EquinoxUsersHelper",
      "constructor()",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.EquinoxUsersHelper"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.EquinoxLocalUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/-equinox-local-user.html",
    "searchKeys": [
      "EquinoxLocalUser",
      "constructor()",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.EquinoxLocalUser"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-equinox-user.html",
    "searchKeys": [
      "EquinoxUser",
      "constructor()",
      "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser"
    ]
  },
  {
    "name": "constructor(containerDirectory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.ResourcesProvider",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/-resources-provider.html",
    "searchKeys": [
      "ResourcesProvider",
      "constructor(containerDirectory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.ResourcesProvider"
    ]
  },
  {
    "name": "constructor(containerDirectory: String, subDirectories: List<String>)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.ResourcesProvider",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/-resources-provider.html",
    "searchKeys": [
      "ResourcesProvider",
      "constructor(containerDirectory: String, subDirectories: List<String>)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.ResourcesProvider"
    ]
  },
  {
    "name": "constructor(context: Class<out Any>)",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.ConfigsGenerator",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-configs-generator.html",
    "searchKeys": [
      "ConfigsGenerator",
      "constructor(context: Class<out Any>)",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.ConfigsGenerator"
    ]
  },
  {
    "name": "constructor(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine.FetcherRoutine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/-fetcher-routine.html",
    "searchKeys": [
      "FetcherRoutine",
      "constructor(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine.FetcherRoutine"
    ]
  },
  {
    "name": "constructor(host: String, userId: String? = null, userToken: String? = null, debugMode: Boolean = false, connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, enableCertificatesValidation: Boolean = false)",
    "description": "com.tecknobit.equinox.Requester.Requester",
    "location": "-equinox/com.tecknobit.equinox/-requester/-requester.html",
    "searchKeys": [
      "Requester",
      "constructor(host: String, userId: String? = null, userToken: String? = null, debugMode: Boolean = false, connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, enableCertificatesValidation: Boolean = false)",
      "com.tecknobit.equinox.Requester.Requester"
    ]
  },
  {
    "name": "constructor(host: String, userId: String? = null, userToken: String? = null, debugMode: Boolean = false, connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, enableCertificatesValidation: Boolean = false)",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.EquinoxRequester",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/-equinox-requester.html",
    "searchKeys": [
      "EquinoxRequester",
      "constructor(host: String, userId: String? = null, userToken: String? = null, debugMode: Boolean = false, connectionTimeout: Int = DEFAULT_REQUEST_TIMEOUT - 1, connectionErrorMessage: String = DEFAULT_CONNECTION_ERROR_MESSAGE, enableCertificatesValidation: Boolean = false)",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.EquinoxRequester"
    ]
  },
  {
    "name": "constructor(id: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.EquinoxItem",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/-equinox-item.html",
    "searchKeys": [
      "EquinoxItem",
      "constructor(id: String)",
      "com.tecknobit.equinox.environment.records.EquinoxItem.EquinoxItem"
    ]
  },
  {
    "name": "constructor(id: String, token: String, name: String, surname: String, email: String, password: String, language: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-equinox-user.html",
    "searchKeys": [
      "EquinoxUser",
      "constructor(id: String, token: String, name: String, surname: String, email: String, password: String, language: String)",
      "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser"
    ]
  },
  {
    "name": "constructor(id: String, token: String, name: String, surname: String, email: String, password: String, profilePic: String, language: String, theme: EquinoxUser.ApplicationTheme)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-equinox-user.html",
    "searchKeys": [
      "EquinoxUser",
      "constructor(id: String, token: String, name: String, surname: String, email: String, password: String, profilePic: String, language: String, theme: EquinoxUser.ApplicationTheme)",
      "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser"
    ]
  },
  {
    "name": "constructor(jItem: JSONObject)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.EquinoxItem",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/-equinox-item.html",
    "searchKeys": [
      "EquinoxItem",
      "constructor(jItem: JSONObject)",
      "com.tecknobit.equinox.environment.records.EquinoxItem.EquinoxItem"
    ]
  },
  {
    "name": "constructor(jUser: JSONObject)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-equinox-user.html",
    "searchKeys": [
      "EquinoxUser",
      "constructor(jUser: JSONObject)",
      "com.tecknobit.equinox.environment.records.EquinoxUser.EquinoxUser"
    ]
  },
  {
    "name": "constructor(refreshRoutine: CoroutineScope)",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManager",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager.html",
    "searchKeys": [
      "FetcherManager",
      "constructor(refreshRoutine: CoroutineScope)",
      "com.tecknobit.equinox.FetcherManager.FetcherManager"
    ]
  },
  {
    "name": "constructor(usersHelper: EquinoxUsersHelper<T>)",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.EquinoxUsersController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/-equinox-users-controller.html",
    "searchKeys": [
      "EquinoxUsersController",
      "constructor(usersHelper: EquinoxUsersHelper<T>)",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.EquinoxUsersController"
    ]
  },
  {
    "name": "enum ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/index.html",
    "searchKeys": [
      "ApplicationTheme",
      "enum ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme"
    ]
  },
  {
    "name": "fun canStart(): Boolean",
    "description": "com.tecknobit.equinox.FetcherManager.canStart",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/can-start.html",
    "searchKeys": [
      "canStart",
      "fun canStart(): Boolean",
      "com.tecknobit.equinox.FetcherManager.canStart"
    ]
  },
  {
    "name": "fun continueToFetch(currentContext: Class<*>): Boolean",
    "description": "com.tecknobit.equinox.FetcherManager.continueToFetch",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/continue-to-fetch.html",
    "searchKeys": [
      "continueToFetch",
      "fun continueToFetch(currentContext: Class<*>): Boolean",
      "com.tecknobit.equinox.FetcherManager.continueToFetch"
    ]
  },
  {
    "name": "fun execute(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
    "description": "com.tecknobit.equinox.FetcherManager.execute",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/execute.html",
    "searchKeys": [
      "execute",
      "fun execute(currentContext: Class<*>, routine: () -> Unit, repeatRoutine: Boolean = true, refreshDelay: Long = 1000)",
      "com.tecknobit.equinox.FetcherManager.execute"
    ]
  },
  {
    "name": "fun getActiveContext(): Class<*>",
    "description": "com.tecknobit.equinox.FetcherManager.Companion.getActiveContext",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-companion/get-active-context.html",
    "searchKeys": [
      "getActiveContext",
      "fun getActiveContext(): Class<*>",
      "com.tecknobit.equinox.FetcherManager.Companion.getActiveContext"
    ]
  },
  {
    "name": "fun restart()",
    "description": "com.tecknobit.equinox.FetcherManager.restart",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/restart.html",
    "searchKeys": [
      "restart",
      "fun restart()",
      "com.tecknobit.equinox.FetcherManager.restart"
    ]
  },
  {
    "name": "fun sendRequest(request: () -> JSONObject, onResponse: (JsonHelper) -> Unit, onConnectionError: (JsonHelper) -> Unit? = null)",
    "description": "com.tecknobit.equinox.Requester.sendRequest",
    "location": "-equinox/com.tecknobit.equinox/-requester/send-request.html",
    "searchKeys": [
      "sendRequest",
      "fun sendRequest(request: () -> JSONObject, onResponse: (JsonHelper) -> Unit, onConnectionError: (JsonHelper) -> Unit? = null)",
      "com.tecknobit.equinox.Requester.sendRequest"
    ]
  },
  {
    "name": "fun sendRequest(request: () -> JSONObject, onSuccess: (JsonHelper) -> Unit, onFailure: (JsonHelper) -> Unit, onConnectionError: (JsonHelper) -> Unit? = null)",
    "description": "com.tecknobit.equinox.Requester.sendRequest",
    "location": "-equinox/com.tecknobit.equinox/-requester/send-request.html",
    "searchKeys": [
      "sendRequest",
      "fun sendRequest(request: () -> JSONObject, onSuccess: (JsonHelper) -> Unit, onFailure: (JsonHelper) -> Unit, onConnectionError: (JsonHelper) -> Unit? = null)",
      "com.tecknobit.equinox.Requester.sendRequest"
    ]
  },
  {
    "name": "fun setActiveContext(currentContext: Class<*>)",
    "description": "com.tecknobit.equinox.FetcherManager.Companion.setActiveContext",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-companion/set-active-context.html",
    "searchKeys": [
      "setActiveContext",
      "fun setActiveContext(currentContext: Class<*>)",
      "com.tecknobit.equinox.FetcherManager.Companion.setActiveContext"
    ]
  },
  {
    "name": "fun setConnectionTimeout(connectionTimeout: Int)",
    "description": "com.tecknobit.equinox.Requester.setConnectionTimeout",
    "location": "-equinox/com.tecknobit.equinox/-requester/set-connection-timeout.html",
    "searchKeys": [
      "setConnectionTimeout",
      "fun setConnectionTimeout(connectionTimeout: Int)",
      "com.tecknobit.equinox.Requester.setConnectionTimeout"
    ]
  },
  {
    "name": "fun setUserCredentials(userId: String?, userToken: String?)",
    "description": "com.tecknobit.equinox.Requester.setUserCredentials",
    "location": "-equinox/com.tecknobit.equinox/-requester/set-user-credentials.html",
    "searchKeys": [
      "setUserCredentials",
      "fun setUserCredentials(userId: String?, userToken: String?)",
      "com.tecknobit.equinox.Requester.setUserCredentials"
    ]
  },
  {
    "name": "fun signUp(serverSecret: String, name: String, surname: String, email: String, password: String, language: String, vararg custom: Any?): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.signUp",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/sign-up.html",
    "searchKeys": [
      "signUp",
      "fun signUp(serverSecret: String, name: String, surname: String, email: String, password: String, language: String, vararg custom: Any?): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.signUp"
    ]
  },
  {
    "name": "fun suspend()",
    "description": "com.tecknobit.equinox.FetcherManager.suspend",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/suspend.html",
    "searchKeys": [
      "suspend",
      "fun suspend()",
      "com.tecknobit.equinox.FetcherManager.suspend"
    ]
  },
  {
    "name": "interface EquinoxUsersRepository<T : EquinoxUser?> : JpaRepository<T, ID> ",
    "description": "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services.repositories/-equinox-users-repository/index.html",
    "searchKeys": [
      "EquinoxUsersRepository",
      "interface EquinoxUsersRepository<T : EquinoxUser?> : JpaRepository<T, ID> ",
      "com.tecknobit.equinox.environment.helpers.services.repositories.EquinoxUsersRepository"
    ]
  },
  {
    "name": "interface FetcherManagerWrapper",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/index.html",
    "searchKeys": [
      "FetcherManagerWrapper",
      "interface FetcherManagerWrapper",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper"
    ]
  },
  {
    "name": "interface GenericFetcher : FetcherManager.ItemFetcher, FetcherManager.ListFetcher",
    "description": "com.tecknobit.equinox.FetcherManager.GenericFetcher",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-generic-fetcher/index.html",
    "searchKeys": [
      "GenericFetcher",
      "interface GenericFetcher : FetcherManager.ItemFetcher, FetcherManager.ListFetcher",
      "com.tecknobit.equinox.FetcherManager.GenericFetcher"
    ]
  },
  {
    "name": "interface ItemFetcher",
    "description": "com.tecknobit.equinox.FetcherManager.ItemFetcher",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-item-fetcher/index.html",
    "searchKeys": [
      "ItemFetcher",
      "interface ItemFetcher",
      "com.tecknobit.equinox.FetcherManager.ItemFetcher"
    ]
  },
  {
    "name": "interface ListFetcher",
    "description": "com.tecknobit.equinox.FetcherManager.ListFetcher",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-list-fetcher/index.html",
    "searchKeys": [
      "ListFetcher",
      "interface ListFetcher",
      "com.tecknobit.equinox.FetcherManager.ListFetcher"
    ]
  },
  {
    "name": "interface ResourcesManager",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/index.html",
    "searchKeys": [
      "ResourcesManager",
      "interface ResourcesManager",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tecknobit.equinox.FetcherManager.Companion",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tecknobit.equinox.FetcherManager.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tecknobit.equinox.Requester.Companion",
    "location": "-equinox/com.tecknobit.equinox/-requester/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tecknobit.equinox.Requester.Companion"
    ]
  },
  {
    "name": "open class ConfigsGenerator",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/index.html",
    "searchKeys": [
      "ConfigsGenerator",
      "open class ConfigsGenerator",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator"
    ]
  },
  {
    "name": "open class EquinoxBaseEndpointsSet",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/index.html",
    "searchKeys": [
      "EquinoxBaseEndpointsSet",
      "open class EquinoxBaseEndpointsSet",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet"
    ]
  },
  {
    "name": "open class EquinoxUser : EquinoxItem",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/index.html",
    "searchKeys": [
      "EquinoxUser",
      "open class EquinoxUser : EquinoxItem",
      "com.tecknobit.equinox.environment.records.EquinoxUser"
    ]
  },
  {
    "name": "open class EquinoxUsersController<T : EquinoxUser?> : EquinoxController<T> ",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/index.html",
    "searchKeys": [
      "EquinoxUsersController",
      "open class EquinoxUsersController<T : EquinoxUser?> : EquinoxController<T> ",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController"
    ]
  },
  {
    "name": "open class EquinoxUsersHelper<T : EquinoxUser?> : ResourcesManager",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/index.html",
    "searchKeys": [
      "EquinoxUsersHelper",
      "open class EquinoxUsersHelper<T : EquinoxUser?> : ResourcesManager",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper"
    ]
  },
  {
    "name": "open class InputValidator",
    "description": "com.tecknobit.equinox.inputs.InputValidator",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/index.html",
    "searchKeys": [
      "InputValidator",
      "open class InputValidator",
      "com.tecknobit.equinox.inputs.InputValidator"
    ]
  },
  {
    "name": "open class ResourcesProvider",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/index.html",
    "searchKeys": [
      "ResourcesProvider",
      "open class ResourcesProvider",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider"
    ]
  },
  {
    "name": "open fun changeEmail(id: String, token: String, payload: Map<String, String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/change-email.html",
    "searchKeys": [
      "changeEmail",
      "open fun changeEmail(id: String, token: String, payload: Map<String, String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeEmail"
    ]
  },
  {
    "name": "open fun changeEmail(newEmail: String): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/change-email.html",
    "searchKeys": [
      "changeEmail",
      "open fun changeEmail(newEmail: String): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeEmail"
    ]
  },
  {
    "name": "open fun changeEmail(newEmail: String, userId: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/change-email.html",
    "searchKeys": [
      "changeEmail",
      "open fun changeEmail(newEmail: String, userId: String)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeEmail"
    ]
  },
  {
    "name": "open fun changeHost(host: String)",
    "description": "com.tecknobit.equinox.Requester.changeHost",
    "location": "-equinox/com.tecknobit.equinox/-requester/change-host.html",
    "searchKeys": [
      "changeHost",
      "open fun changeHost(host: String)",
      "com.tecknobit.equinox.Requester.changeHost"
    ]
  },
  {
    "name": "open fun changeLanguage(id: String, token: String, payload: Map<String, String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/change-language.html",
    "searchKeys": [
      "changeLanguage",
      "open fun changeLanguage(id: String, token: String, payload: Map<String, String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeLanguage"
    ]
  },
  {
    "name": "open fun changeLanguage(newLanguage: String): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/change-language.html",
    "searchKeys": [
      "changeLanguage",
      "open fun changeLanguage(newLanguage: String): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeLanguage"
    ]
  },
  {
    "name": "open fun changeLanguage(newLanguage: String, userId: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/change-language.html",
    "searchKeys": [
      "changeLanguage",
      "open fun changeLanguage(newLanguage: String, userId: String)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeLanguage"
    ]
  },
  {
    "name": "open fun changePassword(id: String, token: String, payload: Map<String, String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changePassword",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/change-password.html",
    "searchKeys": [
      "changePassword",
      "open fun changePassword(id: String, token: String, payload: Map<String, String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changePassword"
    ]
  },
  {
    "name": "open fun changePassword(newPassword: String): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changePassword",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/change-password.html",
    "searchKeys": [
      "changePassword",
      "open fun changePassword(newPassword: String): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changePassword"
    ]
  },
  {
    "name": "open fun changePassword(newPassword: String, userId: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changePassword",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/change-password.html",
    "searchKeys": [
      "changePassword",
      "open fun changePassword(newPassword: String, userId: String)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changePassword"
    ]
  },
  {
    "name": "open fun changeProfilePic(id: String, token: String, profilePic: MultipartFile): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/change-profile-pic.html",
    "searchKeys": [
      "changeProfilePic",
      "open fun changeProfilePic(id: String, token: String, profilePic: MultipartFile): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.changeProfilePic"
    ]
  },
  {
    "name": "open fun changeProfilePic(profilePic: File): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/change-profile-pic.html",
    "searchKeys": [
      "changeProfilePic",
      "open fun changeProfilePic(profilePic: File): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeProfilePic"
    ]
  },
  {
    "name": "open fun changeProfilePic(profilePic: MultipartFile, userId: String): String",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/change-profile-pic.html",
    "searchKeys": [
      "changeProfilePic",
      "open fun changeProfilePic(profilePic: MultipartFile, userId: String): String",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.changeProfilePic"
    ]
  },
  {
    "name": "open fun crateCorsAdviceFile()",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.crateCorsAdviceFile",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/crate-cors-advice-file.html",
    "searchKeys": [
      "crateCorsAdviceFile",
      "open fun crateCorsAdviceFile()",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.crateCorsAdviceFile"
    ]
  },
  {
    "name": "open fun createContainerDirectory()",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createContainerDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-container-directory.html",
    "searchKeys": [
      "createContainerDirectory",
      "open fun createContainerDirectory()",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createContainerDirectory"
    ]
  },
  {
    "name": "open fun createContainerDirectory(containerDirectory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createContainerDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-container-directory.html",
    "searchKeys": [
      "createContainerDirectory",
      "open fun createContainerDirectory(containerDirectory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createContainerDirectory"
    ]
  },
  {
    "name": "open fun createProfileResource(resource: MultipartFile, resourceId: String): String",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.createProfileResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/create-profile-resource.html",
    "searchKeys": [
      "createProfileResource",
      "open fun createProfileResource(resource: MultipartFile, resourceId: String): String",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.createProfileResource"
    ]
  },
  {
    "name": "open fun createResource(resource: MultipartFile, resourcesDirectory: String, resourceId: String): String",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.createResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/create-resource.html",
    "searchKeys": [
      "createResource",
      "open fun createResource(resource: MultipartFile, resourcesDirectory: String, resourceId: String): String",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.createResource"
    ]
  },
  {
    "name": "open fun createResourcesConfigFile(containers: HashSet<String>)",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.createResourcesConfigFile",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/create-resources-config-file.html",
    "searchKeys": [
      "createResourcesConfigFile",
      "open fun createResourcesConfigFile(containers: HashSet<String>)",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.createResourcesConfigFile"
    ]
  },
  {
    "name": "open fun createSubDirectories()",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectories",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-sub-directories.html",
    "searchKeys": [
      "createSubDirectories",
      "open fun createSubDirectories()",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectories"
    ]
  },
  {
    "name": "open fun createSubDirectories(containerDirectory: String, subDirectories: List<String>)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectories",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-sub-directories.html",
    "searchKeys": [
      "createSubDirectories",
      "open fun createSubDirectories(containerDirectory: String, subDirectories: List<String>)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectories"
    ]
  },
  {
    "name": "open fun createSubDirectory(containerDirectory: String, subDirectory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-sub-directory.html",
    "searchKeys": [
      "createSubDirectory",
      "open fun createSubDirectory(containerDirectory: String, subDirectory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectory"
    ]
  },
  {
    "name": "open fun createSubDirectory(subDirectory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-sub-directory.html",
    "searchKeys": [
      "createSubDirectory",
      "open fun createSubDirectory(subDirectory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createSubDirectory"
    ]
  },
  {
    "name": "open fun deleteAccount(): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.deleteAccount",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/delete-account.html",
    "searchKeys": [
      "deleteAccount",
      "open fun deleteAccount(): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.deleteAccount"
    ]
  },
  {
    "name": "open fun deleteAccount(id: String, token: String): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.deleteAccount",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/delete-account.html",
    "searchKeys": [
      "deleteAccount",
      "open fun deleteAccount(id: String, token: String): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.deleteAccount"
    ]
  },
  {
    "name": "open fun deleteProfileResource(userId: String): Boolean",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.deleteProfileResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/delete-profile-resource.html",
    "searchKeys": [
      "deleteProfileResource",
      "open fun deleteProfileResource(userId: String): Boolean",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.deleteProfileResource"
    ]
  },
  {
    "name": "open fun deleteResource(resourcesDirectory: String, resourceId: String): Boolean",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.deleteResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/delete-resource.html",
    "searchKeys": [
      "deleteResource",
      "open fun deleteResource(resourcesDirectory: String, resourceId: String): Boolean",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.deleteResource"
    ]
  },
  {
    "name": "open fun deleteUser(id: String)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.deleteUser",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/delete-user.html",
    "searchKeys": [
      "deleteUser",
      "open fun deleteUser(id: String)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.deleteUser"
    ]
  },
  {
    "name": "open fun generateIdentifier(): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.generateIdentifier",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/generate-identifier.html",
    "searchKeys": [
      "generateIdentifier",
      "open fun generateIdentifier(): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.generateIdentifier"
    ]
  },
  {
    "name": "open fun getCompleteName(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getCompleteName",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-complete-name.html",
    "searchKeys": [
      "getCompleteName",
      "open fun getCompleteName(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getCompleteName"
    ]
  },
  {
    "name": "open fun getCompleteName(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getCompleteName",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-complete-name.html",
    "searchKeys": [
      "getCompleteName",
      "open fun getCompleteName(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getCompleteName"
    ]
  },
  {
    "name": "open fun getContainers(): HashSet<String>",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.getContainers",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/get-containers.html",
    "searchKeys": [
      "getContainers",
      "open fun getContainers(): HashSet<String>",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.getContainers"
    ]
  },
  {
    "name": "open fun getEmail(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-email.html",
    "searchKeys": [
      "getEmail",
      "open fun getEmail(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getEmail"
    ]
  },
  {
    "name": "open fun getEmail(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-email.html",
    "searchKeys": [
      "getEmail",
      "open fun getEmail(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getEmail"
    ]
  },
  {
    "name": "open fun getHostAddress(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getHostAddress",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-host-address.html",
    "searchKeys": [
      "getHostAddress",
      "open fun getHostAddress(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getHostAddress"
    ]
  },
  {
    "name": "open fun getId(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.getId",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/get-id.html",
    "searchKeys": [
      "getId",
      "open fun getId(): String",
      "com.tecknobit.equinox.environment.records.EquinoxItem.getId"
    ]
  },
  {
    "name": "open fun getInstance(jUser: JSONObject): EquinoxUser",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getInstance",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-instance.html",
    "searchKeys": [
      "getInstance",
      "open fun getInstance(jUser: JSONObject): EquinoxUser",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getInstance"
    ]
  },
  {
    "name": "open fun getInstance(theme: String): EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.getInstance",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/get-instance.html",
    "searchKeys": [
      "getInstance",
      "open fun getInstance(theme: String): EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.getInstance"
    ]
  },
  {
    "name": "open fun getLanguage(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-language.html",
    "searchKeys": [
      "getLanguage",
      "open fun getLanguage(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getLanguage"
    ]
  },
  {
    "name": "open fun getLanguage(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-language.html",
    "searchKeys": [
      "getLanguage",
      "open fun getLanguage(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getLanguage"
    ]
  },
  {
    "name": "open fun getName(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getName",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-name.html",
    "searchKeys": [
      "getName",
      "open fun getName(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getName"
    ]
  },
  {
    "name": "open fun getName(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getName",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-name.html",
    "searchKeys": [
      "getName",
      "open fun getName(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getName"
    ]
  },
  {
    "name": "open fun getPassword(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getPassword",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-password.html",
    "searchKeys": [
      "getPassword",
      "open fun getPassword(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getPassword"
    ]
  },
  {
    "name": "open fun getPassword(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getPassword",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-password.html",
    "searchKeys": [
      "getPassword",
      "open fun getPassword(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getPassword"
    ]
  },
  {
    "name": "open fun getProfilePic(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-profile-pic.html",
    "searchKeys": [
      "getProfilePic",
      "open fun getProfilePic(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getProfilePic"
    ]
  },
  {
    "name": "open fun getProfilePic(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-profile-pic.html",
    "searchKeys": [
      "getProfilePic",
      "open fun getProfilePic(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getProfilePic"
    ]
  },
  {
    "name": "open fun getSuffixResource(resource: MultipartFile): String",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.getSuffixResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/get-suffix-resource.html",
    "searchKeys": [
      "getSuffixResource",
      "open fun getSuffixResource(resource: MultipartFile): String",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.getSuffixResource"
    ]
  },
  {
    "name": "open fun getSurname(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getSurname",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-surname.html",
    "searchKeys": [
      "getSurname",
      "open fun getSurname(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getSurname"
    ]
  },
  {
    "name": "open fun getSurname(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getSurname",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-surname.html",
    "searchKeys": [
      "getSurname",
      "open fun getSurname(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getSurname"
    ]
  },
  {
    "name": "open fun getTheme(): EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getTheme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-theme.html",
    "searchKeys": [
      "getTheme",
      "open fun getTheme(): EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getTheme"
    ]
  },
  {
    "name": "open fun getTheme(): EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getTheme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-theme.html",
    "searchKeys": [
      "getTheme",
      "open fun getTheme(): EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getTheme"
    ]
  },
  {
    "name": "open fun getToken(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getToken",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-token.html",
    "searchKeys": [
      "getToken",
      "open fun getToken(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getToken"
    ]
  },
  {
    "name": "open fun getUserId(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getUserId",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-user-id.html",
    "searchKeys": [
      "getUserId",
      "open fun getUserId(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getUserId"
    ]
  },
  {
    "name": "open fun getUserToken(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getUserToken",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-user-token.html",
    "searchKeys": [
      "getUserToken",
      "open fun getUserToken(): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getUserToken"
    ]
  },
  {
    "name": "open fun getValidUserLanguage(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.getValidUserLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/get-valid-user-language.html",
    "searchKeys": [
      "getValidUserLanguage",
      "open fun getValidUserLanguage(): String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.getValidUserLanguage"
    ]
  },
  {
    "name": "open fun initEquinoxEnvironment(storagePath: String, saveMessage: String, context: Class<out Any>, args: Array<String>, customSubDirectories: Array<String>)",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.initEquinoxEnvironment",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/init-equinox-environment.html",
    "searchKeys": [
      "initEquinoxEnvironment",
      "open fun initEquinoxEnvironment(storagePath: String, saveMessage: String, context: Class<out Any>, args: Array<String>, customSubDirectories: Array<String>)",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.initEquinoxEnvironment"
    ]
  },
  {
    "name": "open fun insertNewUser(hostAddress: String, name: String, surname: String, email: String, password: String, language: String, hResponse: JsonHelper, custom: Array<Any>)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.insertNewUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/insert-new-user.html",
    "searchKeys": [
      "insertNewUser",
      "open fun insertNewUser(hostAddress: String, name: String, surname: String, email: String, password: String, language: String, hResponse: JsonHelper, custom: Array<Any>)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.insertNewUser"
    ]
  },
  {
    "name": "open fun isAuthenticated(): Boolean",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.isAuthenticated",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/is-authenticated.html",
    "searchKeys": [
      "isAuthenticated",
      "open fun isAuthenticated(): Boolean",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.isAuthenticated"
    ]
  },
  {
    "name": "open fun isEmailValid(email: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isEmailValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-email-valid.html",
    "searchKeys": [
      "isEmailValid",
      "open fun isEmailValid(email: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isEmailValid"
    ]
  },
  {
    "name": "open fun isHostValid(host: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isHostValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-host-valid.html",
    "searchKeys": [
      "isHostValid",
      "open fun isHostValid(host: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isHostValid"
    ]
  },
  {
    "name": "open fun isLanguageValid(language: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isLanguageValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-language-valid.html",
    "searchKeys": [
      "isLanguageValid",
      "open fun isLanguageValid(language: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isLanguageValid"
    ]
  },
  {
    "name": "open fun isNameValid(name: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isNameValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-name-valid.html",
    "searchKeys": [
      "isNameValid",
      "open fun isNameValid(name: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isNameValid"
    ]
  },
  {
    "name": "open fun isPasswordValid(password: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isPasswordValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-password-valid.html",
    "searchKeys": [
      "isPasswordValid",
      "open fun isPasswordValid(password: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isPasswordValid"
    ]
  },
  {
    "name": "open fun isServerSecretValid(serverSecret: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isServerSecretValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-server-secret-valid.html",
    "searchKeys": [
      "isServerSecretValid",
      "open fun isServerSecretValid(serverSecret: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isServerSecretValid"
    ]
  },
  {
    "name": "open fun isSurnameValid(surname: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isSurnameValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-surname-valid.html",
    "searchKeys": [
      "isSurnameValid",
      "open fun isSurnameValid(surname: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isSurnameValid"
    ]
  },
  {
    "name": "open fun saveResource(resource: MultipartFile, path: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.saveResource",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/save-resource.html",
    "searchKeys": [
      "saveResource",
      "open fun saveResource(resource: MultipartFile, path: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.saveResource"
    ]
  },
  {
    "name": "open fun setActiveContext(currentContext: Class<*>)",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.setActiveContext",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-manager-wrapper/set-active-context.html",
    "searchKeys": [
      "setActiveContext",
      "open fun setActiveContext(currentContext: Class<*>)",
      "com.tecknobit.equinox.FetcherManager.FetcherManagerWrapper.setActiveContext"
    ]
  },
  {
    "name": "open fun setEmail(email: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setEmail",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-email.html",
    "searchKeys": [
      "setEmail",
      "open fun setEmail(email: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setEmail"
    ]
  },
  {
    "name": "open fun setHostAddress(hostAddress: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setHostAddress",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-host-address.html",
    "searchKeys": [
      "setHostAddress",
      "open fun setHostAddress(hostAddress: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setHostAddress"
    ]
  },
  {
    "name": "open fun setLanguage(language: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setLanguage",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-language.html",
    "searchKeys": [
      "setLanguage",
      "open fun setLanguage(language: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setLanguage"
    ]
  },
  {
    "name": "open fun setName(name: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setName",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-name.html",
    "searchKeys": [
      "setName",
      "open fun setName(name: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setName"
    ]
  },
  {
    "name": "open fun setPassword(password: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setPassword",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-password.html",
    "searchKeys": [
      "setPassword",
      "open fun setPassword(password: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setPassword"
    ]
  },
  {
    "name": "open fun setProfilePic(profilePic: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setProfilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-profile-pic.html",
    "searchKeys": [
      "setProfilePic",
      "open fun setProfilePic(profilePic: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setProfilePic"
    ]
  },
  {
    "name": "open fun setSurname(surname: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setSurname",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-surname.html",
    "searchKeys": [
      "setSurname",
      "open fun setSurname(surname: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setSurname"
    ]
  },
  {
    "name": "open fun setTheme(theme: EquinoxUser.ApplicationTheme)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setTheme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-theme.html",
    "searchKeys": [
      "setTheme",
      "open fun setTheme(theme: EquinoxUser.ApplicationTheme)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setTheme"
    ]
  },
  {
    "name": "open fun setUserId(userId: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setUserId",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-user-id.html",
    "searchKeys": [
      "setUserId",
      "open fun setUserId(userId: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setUserId"
    ]
  },
  {
    "name": "open fun setUserToken(userToken: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setUserToken",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-user-token.html",
    "searchKeys": [
      "setUserToken",
      "open fun setUserToken(userToken: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setUserToken"
    ]
  },
  {
    "name": "open fun signIn(email: String, password: String, vararg custom: Any?): JSONObject",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.signIn",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/sign-in.html",
    "searchKeys": [
      "signIn",
      "open fun signIn(email: String, password: String, vararg custom: Any?): JSONObject",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.signIn"
    ]
  },
  {
    "name": "open fun signIn(payload: Map<String, String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.signIn",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/sign-in.html",
    "searchKeys": [
      "signIn",
      "open fun signIn(payload: Map<String, String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.signIn"
    ]
  },
  {
    "name": "open fun signInUser(email: String, password: String, custom: Array<Any>): T",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.signInUser",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/sign-in-user.html",
    "searchKeys": [
      "signInUser",
      "open fun signInUser(email: String, password: String, custom: Array<Any>): T",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.signInUser"
    ]
  },
  {
    "name": "open fun signUp(payload: Map<String, String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.signUp",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/sign-up.html",
    "searchKeys": [
      "signUp",
      "open fun signUp(payload: Map<String, String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.signUp"
    ]
  },
  {
    "name": "open fun signUpUser(id: String, token: String, name: String, surname: String, email: String, password: String, language: String, custom: Array<Any>)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.signUpUser",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/sign-up-user.html",
    "searchKeys": [
      "signUpUser",
      "open fun signUpUser(id: String, token: String, name: String, surname: String, email: String, password: String, language: String, custom: Array<Any>)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.signUpUser"
    ]
  },
  {
    "name": "open fun toString(): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.toString",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/to-string.html",
    "searchKeys": [
      "toString",
      "open fun toString(): String",
      "com.tecknobit.equinox.environment.records.EquinoxItem.toString"
    ]
  },
  {
    "name": "open fun valueOf(name: String): EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.valueOf",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/value-of.html",
    "searchKeys": [
      "valueOf",
      "open fun valueOf(name: String): EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.valueOf"
    ]
  },
  {
    "name": "open fun values(): Array<EquinoxUser.ApplicationTheme>",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.values",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-application-theme/values.html",
    "searchKeys": [
      "values",
      "open fun values(): Array<EquinoxUser.ApplicationTheme>",
      "com.tecknobit.equinox.environment.records.EquinoxUser.ApplicationTheme.values"
    ]
  },
  {
    "name": "open override fun changeHost(host: String)",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeHost",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/change-host.html",
    "searchKeys": [
      "changeHost",
      "open override fun changeHost(host: String)",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.changeHost"
    ]
  },
  {
    "name": "open var resourcesProvider: ResourcesProvider",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.resourcesProvider",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/resources-provider.html",
    "searchKeys": [
      "resourcesProvider",
      "open var resourcesProvider: ResourcesProvider",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.resourcesProvider"
    ]
  },
  {
    "name": "private data class FetcherRoutine(val currentContext: Class<*>, val routine: () -> Unit, val repeatRoutine: Boolean = true, val refreshDelay: Long = 1000)",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/index.html",
    "searchKeys": [
      "FetcherRoutine",
      "private data class FetcherRoutine(val currentContext: Class<*>, val routine: () -> Unit, val repeatRoutine: Boolean = true, val refreshDelay: Long = 1000)",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine"
    ]
  },
  {
    "name": "private fun execRequest(method: APIRequest.RequestMethod, endpoint: String, payload: APIRequest.Params? = null): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execRequest",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-request.html",
    "searchKeys": [
      "execRequest",
      "private fun execRequest(method: APIRequest.RequestMethod, endpoint: String, payload: APIRequest.Params? = null): JSONObject",
      "com.tecknobit.equinox.Requester.execRequest"
    ]
  },
  {
    "name": "private fun isSuccessfulResponse(response: JSONObject?): SocketManager.StandardResponseCode",
    "description": "com.tecknobit.equinox.Requester.isSuccessfulResponse",
    "location": "-equinox/com.tecknobit.equinox/-requester/is-successful-response.html",
    "searchKeys": [
      "isSuccessfulResponse",
      "private fun isSuccessfulResponse(response: JSONObject?): SocketManager.StandardResponseCode",
      "com.tecknobit.equinox.Requester.isSuccessfulResponse"
    ]
  },
  {
    "name": "private fun logError(exception: Exception)",
    "description": "com.tecknobit.equinox.Requester.logError",
    "location": "-equinox/com.tecknobit.equinox/-requester/log-error.html",
    "searchKeys": [
      "logError",
      "private fun logError(exception: Exception)",
      "com.tecknobit.equinox.Requester.logError"
    ]
  },
  {
    "name": "private fun logRequestInfo(requestUrl: String, requestPayloadInfo: () -> Unit, response: JSONObject?)",
    "description": "com.tecknobit.equinox.Requester.logRequestInfo",
    "location": "-equinox/com.tecknobit.equinox/-requester/log-request-info.html",
    "searchKeys": [
      "logRequestInfo",
      "private fun logRequestInfo(requestUrl: String, requestPayloadInfo: () -> Unit, response: JSONObject?)",
      "com.tecknobit.equinox.Requester.logRequestInfo"
    ]
  },
  {
    "name": "private fun validateSelfSignedCertificate(okHttpClient: OkHttpClient): OkHttpClient",
    "description": "com.tecknobit.equinox.Requester.validateSelfSignedCertificate",
    "location": "-equinox/com.tecknobit.equinox/-requester/validate-self-signed-certificate.html",
    "searchKeys": [
      "validateSelfSignedCertificate",
      "private fun validateSelfSignedCertificate(okHttpClient: OkHttpClient): OkHttpClient",
      "com.tecknobit.equinox.Requester.validateSelfSignedCertificate"
    ]
  },
  {
    "name": "private lateinit var activeContext: Class<*>",
    "description": "com.tecknobit.equinox.FetcherManager.Companion.activeContext",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-companion/active-context.html",
    "searchKeys": [
      "activeContext",
      "private lateinit var activeContext: Class<*>",
      "com.tecknobit.equinox.FetcherManager.Companion.activeContext"
    ]
  },
  {
    "name": "private lateinit var lastRoutineExecuted: FetcherManager.FetcherRoutine",
    "description": "com.tecknobit.equinox.FetcherManager.lastRoutineExecuted",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/last-routine-executed.html",
    "searchKeys": [
      "lastRoutineExecuted",
      "private lateinit var lastRoutineExecuted: FetcherManager.FetcherRoutine",
      "com.tecknobit.equinox.FetcherManager.lastRoutineExecuted"
    ]
  },
  {
    "name": "private open fun <E> arrangeQuery(queryBuilder: StringBuilder, list: List<E>, escape: Boolean)",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.arrangeQuery",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/arrange-query.html",
    "searchKeys": [
      "arrangeQuery",
      "private open fun <E> arrangeQuery(queryBuilder: StringBuilder, list: List<E>, escape: Boolean)",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.arrangeQuery"
    ]
  },
  {
    "name": "private open fun checkEnvironmentStatus()",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.checkEnvironmentStatus",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/check-environment-status.html",
    "searchKeys": [
      "checkEnvironmentStatus",
      "private open fun checkEnvironmentStatus()",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.checkEnvironmentStatus"
    ]
  },
  {
    "name": "private open fun configFileStillNotCreated(configsPath: String): Boolean",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.configFileStillNotCreated",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/config-file-still-not-created.html",
    "searchKeys": [
      "configFileStillNotCreated",
      "private open fun configFileStillNotCreated(configsPath: String): Boolean",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.configFileStillNotCreated"
    ]
  },
  {
    "name": "private open fun createConfigFile(configsPath: String, content: String)",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.createConfigFile",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/create-config-file.html",
    "searchKeys": [
      "createConfigFile",
      "private open fun createConfigFile(configsPath: String, content: String)",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.createConfigFile"
    ]
  },
  {
    "name": "private open fun createResourceDirectory(resDirectory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createResourceDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/create-resource-directory.html",
    "searchKeys": [
      "createResourceDirectory",
      "private open fun createResourceDirectory(resDirectory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.createResourceDirectory"
    ]
  },
  {
    "name": "private open fun formatDirectory(directory: String): String",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.formatDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/format-directory.html",
    "searchKeys": [
      "formatDirectory",
      "private open fun formatDirectory(directory: String): String",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.formatDirectory"
    ]
  },
  {
    "name": "private open fun getConfigFileContent(kotlinContent: String, javaContent: String): String",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.getConfigFileContent",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/get-config-file-content.html",
    "searchKeys": [
      "getConfigFileContent",
      "private open fun getConfigFileContent(kotlinContent: String, javaContent: String): String",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.getConfigFileContent"
    ]
  },
  {
    "name": "private open fun getConfigsPath(configFileName: String): String",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.getConfigsPath",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/get-configs-path.html",
    "searchKeys": [
      "getConfigsPath",
      "private open fun getConfigsPath(configFileName: String): String",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.getConfigsPath"
    ]
  },
  {
    "name": "private open fun isKotlinClass(): Boolean",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.isKotlinClass",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/is-kotlin-class.html",
    "searchKeys": [
      "isKotlinClass",
      "private open fun isKotlinClass(): Boolean",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.isKotlinClass"
    ]
  },
  {
    "name": "private open fun plainResponse(responseCode: SocketManager.StandardResponseCode, message: String): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.plainResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/plain-response.html",
    "searchKeys": [
      "plainResponse",
      "private open fun plainResponse(responseCode: SocketManager.StandardResponseCode, message: String): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.plainResponse"
    ]
  },
  {
    "name": "private open fun printError(directory: String)",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.printError",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/print-error.html",
    "searchKeys": [
      "printError",
      "private open fun printError(directory: String)",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.printError"
    ]
  },
  {
    "name": "private open fun setBasicResourcesConfiguration(context: Class<out Any>, customSubDirectories: Array<String>)",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.setBasicResourcesConfiguration",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/set-basic-resources-configuration.html",
    "searchKeys": [
      "setBasicResourcesConfiguration",
      "private open fun setBasicResourcesConfiguration(context: Class<out Any>, customSubDirectories: Array<String>)",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.setBasicResourcesConfiguration"
    ]
  },
  {
    "name": "private open var usersRepository: EquinoxUsersRepository<T>",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.usersRepository",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/users-repository.html",
    "searchKeys": [
      "usersRepository",
      "private open var usersRepository: EquinoxUsersRepository<T>",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.usersRepository"
    ]
  },
  {
    "name": "private val CORS_ADVICE_FILE_NAME: String = \"CORSAdvice\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.CORS_ADVICE_FILE_NAME",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-c-o-r-s_-a-d-v-i-c-e_-f-i-l-e_-n-a-m-e.html",
    "searchKeys": [
      "CORS_ADVICE_FILE_NAME",
      "private val CORS_ADVICE_FILE_NAME: String = \"CORSAdvice\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.CORS_ADVICE_FILE_NAME"
    ]
  },
  {
    "name": "private val JAVA_CONFIGURATION_FILE_CONTENT: String = \"       \nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.resource.PathResourceResolver;\n\n/**\n * The {@code ResourceConfigs} class is useful to set the configuration of the resources to correctly serve the\n * images by the server\n *\n * @author N7ghtm4r3 - Tecknobit\n * @see WebMvcConfigurer\n */\n@Configuration\npublic class ResourcesConfig implements WebMvcConfigurer {\n\n    /**\n     * Add handlers to serve static resources such as images, js, and, css\n     * files from specific locations under web application root, the classpath,\n     * and others.\n     *\n     * @see ResourceHandlerRegistry\n     */\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/**\")\n                .addResourceLocations(\"file:<list>\")\n                .setCachePeriod(0)\n                .resourceChain(true)\n                .addResolver(new PathResourceResolver());\n    }\n\n}\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.JAVA_CONFIGURATION_FILE_CONTENT",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-j-a-v-a_-c-o-n-f-i-g-u-r-a-t-i-o-n_-f-i-l-e_-c-o-n-t-e-n-t.html",
    "searchKeys": [
      "JAVA_CONFIGURATION_FILE_CONTENT",
      "private val JAVA_CONFIGURATION_FILE_CONTENT: String = \"       \nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.resource.PathResourceResolver;\n\n/**\n * The {@code ResourceConfigs} class is useful to set the configuration of the resources to correctly serve the\n * images by the server\n *\n * @author N7ghtm4r3 - Tecknobit\n * @see WebMvcConfigurer\n */\n@Configuration\npublic class ResourcesConfig implements WebMvcConfigurer {\n\n    /**\n     * Add handlers to serve static resources such as images, js, and, css\n     * files from specific locations under web application root, the classpath,\n     * and others.\n     *\n     * @see ResourceHandlerRegistry\n     */\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/**\")\n                .addResourceLocations(\"file:<list>\")\n                .setCachePeriod(0)\n                .resourceChain(true)\n                .addResolver(new PathResourceResolver());\n    }\n\n}\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.JAVA_CONFIGURATION_FILE_CONTENT"
    ]
  },
  {
    "name": "private val JAVA_CORS_ADVICE_FILE_CONTENT: String = \"            \nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.CorsFilter;\n            \n/**\n * The {@code CORSAdvice} class is useful to set the CORS policy\n *\n * @author N7ghtm4r3 - Tecknobit\n */\n@Configuration\npublic class CORSAdvice {\n        \n    /**\n     * Method to set the CORS filter <br>\n     * No any-params required\n     */\n    @Bean\n    public FilterRegistrationBean corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration config = new CorsConfiguration();\n        config.setAllowCredentials(false);\n        config.addAllowedOrigin(\"*\");\n        config.addAllowedHeader(\"*\");\n        config.addAllowedMethod(\"*\");\n        source.registerCorsConfiguration(\"/**\", config);\n        FilterRegistrationBean bean = new FilterRegistrationBean(new CorsFilter(source));\n        bean.setOrder(0);\n        return bean;\n    }\n            \n}\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.JAVA_CORS_ADVICE_FILE_CONTENT",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-j-a-v-a_-c-o-r-s_-a-d-v-i-c-e_-f-i-l-e_-c-o-n-t-e-n-t.html",
    "searchKeys": [
      "JAVA_CORS_ADVICE_FILE_CONTENT",
      "private val JAVA_CORS_ADVICE_FILE_CONTENT: String = \"            \nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.CorsFilter;\n            \n/**\n * The {@code CORSAdvice} class is useful to set the CORS policy\n *\n * @author N7ghtm4r3 - Tecknobit\n */\n@Configuration\npublic class CORSAdvice {\n        \n    /**\n     * Method to set the CORS filter <br>\n     * No any-params required\n     */\n    @Bean\n    public FilterRegistrationBean corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration config = new CorsConfiguration();\n        config.setAllowCredentials(false);\n        config.addAllowedOrigin(\"*\");\n        config.addAllowedHeader(\"*\");\n        config.addAllowedMethod(\"*\");\n        source.registerCorsConfiguration(\"/**\", config);\n        FilterRegistrationBean bean = new FilterRegistrationBean(new CorsFilter(source));\n        bean.setOrder(0);\n        return bean;\n    }\n            \n}\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.JAVA_CORS_ADVICE_FILE_CONTENT"
    ]
  },
  {
    "name": "private val KOTLIN_CONFIGURATION_FILE_CONTENT: String = \"            \nimport org.springframework.context.annotation.Configuration\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer\nimport org.springframework.web.servlet.resource.PathResourceResolver\n\n/**\n * The `ResourceConfigs` class is useful to set the configuration of the resources to correctly serve the\n * images by the server\n *\n * @author N7ghtm4r3 - Tecknobit\n * @see WebMvcConfigurer\n */\n@Configuration\nclass ResourcesConfig : WebMvcConfigurer {\n            \n    /**\n     * Add handlers to serve static resources such as images, js, and, css\n     * files from specific locations under web application root, the classpath,\n     * and others.\n     *\n     * @see ResourceHandlerRegistry\n     */\n    override fun addResourceHandlers(registry: ResourceHandlerRegistry) {\n        registry.addResourceHandler(\"/**\")\n            .addResourceLocations(\"file:<list>\")\n            .setCachePeriod(0)\n            .resourceChain(true)\n            .addResolver(PathResourceResolver())\n    }\n           \n}\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.KOTLIN_CONFIGURATION_FILE_CONTENT",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-k-o-t-l-i-n_-c-o-n-f-i-g-u-r-a-t-i-o-n_-f-i-l-e_-c-o-n-t-e-n-t.html",
    "searchKeys": [
      "KOTLIN_CONFIGURATION_FILE_CONTENT",
      "private val KOTLIN_CONFIGURATION_FILE_CONTENT: String = \"            \nimport org.springframework.context.annotation.Configuration\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer\nimport org.springframework.web.servlet.resource.PathResourceResolver\n\n/**\n * The `ResourceConfigs` class is useful to set the configuration of the resources to correctly serve the\n * images by the server\n *\n * @author N7ghtm4r3 - Tecknobit\n * @see WebMvcConfigurer\n */\n@Configuration\nclass ResourcesConfig : WebMvcConfigurer {\n            \n    /**\n     * Add handlers to serve static resources such as images, js, and, css\n     * files from specific locations under web application root, the classpath,\n     * and others.\n     *\n     * @see ResourceHandlerRegistry\n     */\n    override fun addResourceHandlers(registry: ResourceHandlerRegistry) {\n        registry.addResourceHandler(\"/**\")\n            .addResourceLocations(\"file:<list>\")\n            .setCachePeriod(0)\n            .resourceChain(true)\n            .addResolver(PathResourceResolver())\n    }\n           \n}\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.KOTLIN_CONFIGURATION_FILE_CONTENT"
    ]
  },
  {
    "name": "private val KOTLIN_CORS_ADVICE_FILE_CONTENT: String = \" \n import org.springframework.boot.web.servlet.FilterRegistrationBean\n import org.springframework.context.annotation.Bean\n import org.springframework.context.annotation.Configuration\n import org.springframework.web.cors.CorsConfiguration\n import org.springframework.web.cors.UrlBasedCorsConfigurationSource\n import org.springframework.web.filter.CorsFilter\n             \n /**\n  * The `CORSAdvice` class is useful to set the CORS policy\n  *\n  * @author N7ghtm4r3 - Tecknobit\n  */\n @Configuration\n class CORSAdvice {\n \n     /**\n      * Method to set the CORS filter\n      *\n      * No any-params required\n      */\n     @Bean\n     fun corsFilter(): FilterRegistrationBean<*> {\n         val source = UrlBasedCorsConfigurationSource()\n         val config = CorsConfiguration()\n         config.allowCredentials = false\n         config.addAllowedOrigin(\"*\")\n         config.addAllowedHeader(\"*\")\n         config.addAllowedMethod(\"*\")\n         source.registerCorsConfiguration(\"/**\", config)\n         val bean: FilterRegistrationBean<*> = FilterRegistrationBean(CorsFilter(source))\n         bean.order = 0\n         return bean\n     }\n     \n }\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.KOTLIN_CORS_ADVICE_FILE_CONTENT",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-k-o-t-l-i-n_-c-o-r-s_-a-d-v-i-c-e_-f-i-l-e_-c-o-n-t-e-n-t.html",
    "searchKeys": [
      "KOTLIN_CORS_ADVICE_FILE_CONTENT",
      "private val KOTLIN_CORS_ADVICE_FILE_CONTENT: String = \" \n import org.springframework.boot.web.servlet.FilterRegistrationBean\n import org.springframework.context.annotation.Bean\n import org.springframework.context.annotation.Configuration\n import org.springframework.web.cors.CorsConfiguration\n import org.springframework.web.cors.UrlBasedCorsConfigurationSource\n import org.springframework.web.filter.CorsFilter\n             \n /**\n  * The `CORSAdvice` class is useful to set the CORS policy\n  *\n  * @author N7ghtm4r3 - Tecknobit\n  */\n @Configuration\n class CORSAdvice {\n \n     /**\n      * Method to set the CORS filter\n      *\n      * No any-params required\n      */\n     @Bean\n     fun corsFilter(): FilterRegistrationBean<*> {\n         val source = UrlBasedCorsConfigurationSource()\n         val config = CorsConfiguration()\n         config.allowCredentials = false\n         config.addAllowedOrigin(\"*\")\n         config.addAllowedHeader(\"*\")\n         config.addAllowedMethod(\"*\")\n         source.registerCorsConfiguration(\"/**\", config)\n         val bean: FilterRegistrationBean<*> = FilterRegistrationBean(CorsFilter(source))\n         bean.order = 0\n         return bean\n     }\n     \n }\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.KOTLIN_CORS_ADVICE_FILE_CONTENT"
    ]
  },
  {
    "name": "private val RESOURCES_CONFIG_FILE_NAME: String = \"ResourcesConfig\"",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.RESOURCES_CONFIG_FILE_NAME",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/-r-e-s-o-u-r-c-e-s_-c-o-n-f-i-g_-f-i-l-e_-n-a-m-e.html",
    "searchKeys": [
      "RESOURCES_CONFIG_FILE_NAME",
      "private val RESOURCES_CONFIG_FILE_NAME: String = \"ResourcesConfig\"",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.RESOURCES_CONFIG_FILE_NAME"
    ]
  },
  {
    "name": "private val context: Class<out Any>",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.context",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/context.html",
    "searchKeys": [
      "context",
      "private val context: Class<out Any>",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.context"
    ]
  },
  {
    "name": "private val initHost: () -> Unit",
    "description": "com.tecknobit.equinox.Requester.initHost",
    "location": "-equinox/com.tecknobit.equinox/-requester/init-host.html",
    "searchKeys": [
      "initHost",
      "private val initHost: () -> Unit",
      "com.tecknobit.equinox.Requester.initHost"
    ]
  },
  {
    "name": "private val preferences: Preferences",
    "description": "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.preferences",
    "location": "-equinox/com.tecknobit.equinox.configurationsutils/-configs-generator/preferences.html",
    "searchKeys": [
      "preferences",
      "private val preferences: Preferences",
      "com.tecknobit.equinox.configurationsutils.ConfigsGenerator.preferences"
    ]
  },
  {
    "name": "private val refreshRoutine: CoroutineScope",
    "description": "com.tecknobit.equinox.FetcherManager.refreshRoutine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/refresh-routine.html",
    "searchKeys": [
      "refreshRoutine",
      "private val refreshRoutine: CoroutineScope",
      "com.tecknobit.equinox.FetcherManager.refreshRoutine"
    ]
  },
  {
    "name": "private var isRefreshing: Boolean",
    "description": "com.tecknobit.equinox.FetcherManager.isRefreshing",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/is-refreshing.html",
    "searchKeys": [
      "isRefreshing",
      "private var isRefreshing: Boolean",
      "com.tecknobit.equinox.FetcherManager.isRefreshing"
    ]
  },
  {
    "name": "protected abstract fun getPreference(key: String): String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getPreference",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/get-preference.html",
    "searchKeys": [
      "getPreference",
      "protected abstract fun getPreference(key: String): String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.getPreference"
    ]
  },
  {
    "name": "protected abstract fun setPreference(key: String, value: String)",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setPreference",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/set-preference.html",
    "searchKeys": [
      "setPreference",
      "protected abstract fun setPreference(key: String, value: String)",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.setPreference"
    ]
  },
  {
    "name": "protected constructor()",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.EquinoxBaseEndpointsSet",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-equinox-base-endpoints-set.html",
    "searchKeys": [
      "EquinoxBaseEndpointsSet",
      "protected constructor()",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.EquinoxBaseEndpointsSet"
    ]
  },
  {
    "name": "protected constructor()",
    "description": "com.tecknobit.equinox.inputs.InputValidator.InputValidator",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-input-validator.html",
    "searchKeys": [
      "InputValidator",
      "protected constructor()",
      "com.tecknobit.equinox.inputs.InputValidator.InputValidator"
    ]
  },
  {
    "name": "protected fun assembleCustomEndpointPath(customEndpoint: String, subEndpoint: String = \"\", query: String = \"\"): String",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.assembleCustomEndpointPath",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/assemble-custom-endpoint-path.html",
    "searchKeys": [
      "assembleCustomEndpointPath",
      "protected fun assembleCustomEndpointPath(customEndpoint: String, subEndpoint: String = \"\", query: String = \"\"): String",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.assembleCustomEndpointPath"
    ]
  },
  {
    "name": "protected fun assembleUsersEndpointPath(endpoint: String = \"\"): String",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.assembleUsersEndpointPath",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/assemble-users-endpoint-path.html",
    "searchKeys": [
      "assembleUsersEndpointPath",
      "protected fun assembleUsersEndpointPath(endpoint: String = \"\"): String",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.assembleUsersEndpointPath"
    ]
  },
  {
    "name": "protected fun connectionErrorMessage(): JSONObject",
    "description": "com.tecknobit.equinox.Requester.connectionErrorMessage",
    "location": "-equinox/com.tecknobit.equinox/-requester/connection-error-message.html",
    "searchKeys": [
      "connectionErrorMessage",
      "protected fun connectionErrorMessage(): JSONObject",
      "com.tecknobit.equinox.Requester.connectionErrorMessage"
    ]
  },
  {
    "name": "protected fun execDelete(endpoint: String, payload: APIRequest.Params? = null): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execDelete",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-delete.html",
    "searchKeys": [
      "execDelete",
      "protected fun execDelete(endpoint: String, payload: APIRequest.Params? = null): JSONObject",
      "com.tecknobit.equinox.Requester.execDelete"
    ]
  },
  {
    "name": "protected fun execGet(endpoint: String): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execGet",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-get.html",
    "searchKeys": [
      "execGet",
      "protected fun execGet(endpoint: String): JSONObject",
      "com.tecknobit.equinox.Requester.execGet"
    ]
  },
  {
    "name": "protected fun execMultipartRequest(endpoint: String, body: MultipartBody): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execMultipartRequest",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-multipart-request.html",
    "searchKeys": [
      "execMultipartRequest",
      "protected fun execMultipartRequest(endpoint: String, body: MultipartBody): JSONObject",
      "com.tecknobit.equinox.Requester.execMultipartRequest"
    ]
  },
  {
    "name": "protected fun execPatch(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execPatch",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-patch.html",
    "searchKeys": [
      "execPatch",
      "protected fun execPatch(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
      "com.tecknobit.equinox.Requester.execPatch"
    ]
  },
  {
    "name": "protected fun execPost(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execPost",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-post.html",
    "searchKeys": [
      "execPost",
      "protected fun execPost(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
      "com.tecknobit.equinox.Requester.execPost"
    ]
  },
  {
    "name": "protected fun execPut(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
    "description": "com.tecknobit.equinox.Requester.execPut",
    "location": "-equinox/com.tecknobit.equinox/-requester/exec-put.html",
    "searchKeys": [
      "execPut",
      "protected fun execPut(endpoint: String, payload: APIRequest.Params = Params()): JSONObject",
      "com.tecknobit.equinox.Requester.execPut"
    ]
  },
  {
    "name": "protected open fun <V> loadJsonHelper(payload: Map<String, V>)",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.loadJsonHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/load-json-helper.html",
    "searchKeys": [
      "loadJsonHelper",
      "protected open fun <V> loadJsonHelper(payload: Map<String, V>)",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.loadJsonHelper"
    ]
  },
  {
    "name": "protected open fun <V> successResponse(value: V): HashMap<String, V>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/success-response.html",
    "searchKeys": [
      "successResponse",
      "protected open fun <V> successResponse(value: V): HashMap<String, V>",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse"
    ]
  },
  {
    "name": "protected open fun assembleSignInSuccessResponse(user: T): JSONObject",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.assembleSignInSuccessResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/assemble-sign-in-success-response.html",
    "searchKeys": [
      "assembleSignInSuccessResponse",
      "protected open fun assembleSignInSuccessResponse(user: T): JSONObject",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.assembleSignInSuccessResponse"
    ]
  },
  {
    "name": "protected open fun executeAuth(payload: Map<String, String>, personalData: Array<String>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.executeAuth",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/execute-auth.html",
    "searchKeys": [
      "executeAuth",
      "protected open fun executeAuth(payload: Map<String, String>, personalData: Array<String>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.executeAuth"
    ]
  },
  {
    "name": "protected open fun failedResponse(error: String): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.failedResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/failed-response.html",
    "searchKeys": [
      "failedResponse",
      "protected open fun failedResponse(error: String): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.failedResponse"
    ]
  },
  {
    "name": "protected open fun getQueryValuesKeys(): List<String>",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.getQueryValuesKeys",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/get-query-values-keys.html",
    "searchKeys": [
      "getQueryValuesKeys",
      "protected open fun getQueryValuesKeys(): List<String>",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.getQueryValuesKeys"
    ]
  },
  {
    "name": "protected open fun getSignInCustomParams(): Array<Any>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.getSignInCustomParams",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/get-sign-in-custom-params.html",
    "searchKeys": [
      "getSignInCustomParams",
      "protected open fun getSignInCustomParams(): Array<Any>",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.getSignInCustomParams"
    ]
  },
  {
    "name": "protected open fun getSignInPayload(email: String, password: String, vararg custom: Any?): APIRequest.Params",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.getSignInPayload",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/get-sign-in-payload.html",
    "searchKeys": [
      "getSignInPayload",
      "protected open fun getSignInPayload(email: String, password: String, vararg custom: Any?): APIRequest.Params",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.getSignInPayload"
    ]
  },
  {
    "name": "protected open fun getSignUpCustomParams(): Array<Any>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.getSignUpCustomParams",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/get-sign-up-custom-params.html",
    "searchKeys": [
      "getSignUpCustomParams",
      "protected open fun getSignUpCustomParams(): Array<Any>",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.getSignUpCustomParams"
    ]
  },
  {
    "name": "protected open fun getSignUpPayload(serverSecret: String, name: String, surname: String, email: String, password: String, language: String, vararg custom: Any?): APIRequest.Params",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxRequester.getSignUpPayload",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-requester/get-sign-up-payload.html",
    "searchKeys": [
      "getSignUpPayload",
      "protected open fun getSignUpPayload(serverSecret: String, name: String, surname: String, email: String, password: String, language: String, vararg custom: Any?): APIRequest.Params",
      "com.tecknobit.equinox.environment.helpers.EquinoxRequester.getSignUpPayload"
    ]
  },
  {
    "name": "protected open fun hash(secret: String): String",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.hash",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/hash.html",
    "searchKeys": [
      "hash",
      "protected open fun hash(secret: String): String",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.hash"
    ]
  },
  {
    "name": "protected open fun initLocalUser()",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.initLocalUser",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/init-local-user.html",
    "searchKeys": [
      "initLocalUser",
      "protected open fun initLocalUser()",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.initLocalUser"
    ]
  },
  {
    "name": "protected open fun isInputValid(field: String): Boolean",
    "description": "com.tecknobit.equinox.inputs.InputValidator.isInputValid",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/is-input-valid.html",
    "searchKeys": [
      "isInputValid",
      "protected open fun isInputValid(field: String): Boolean",
      "com.tecknobit.equinox.inputs.InputValidator.isInputValid"
    ]
  },
  {
    "name": "protected open fun isMe(id: String, token: String): Boolean",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.isMe",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/is-me.html",
    "searchKeys": [
      "isMe",
      "protected open fun isMe(id: String, token: String): Boolean",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.isMe"
    ]
  },
  {
    "name": "protected open fun loadJsonHelper(payload: String)",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.loadJsonHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/load-json-helper.html",
    "searchKeys": [
      "loadJsonHelper",
      "protected open fun loadJsonHelper(payload: String)",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.loadJsonHelper"
    ]
  },
  {
    "name": "protected open fun successResponse(): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/success-response.html",
    "searchKeys": [
      "successResponse",
      "protected open fun successResponse(): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse"
    ]
  },
  {
    "name": "protected open fun successResponse(message: JSONObject): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/success-response.html",
    "searchKeys": [
      "successResponse",
      "protected open fun successResponse(message: JSONObject): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.successResponse"
    ]
  },
  {
    "name": "protected open fun validateSignIn(email: String, password: String, language: String, custom: Array<Any>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.validateSignIn",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/validate-sign-in.html",
    "searchKeys": [
      "validateSignIn",
      "protected open fun validateSignIn(email: String, password: String, language: String, custom: Array<Any>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.validateSignIn"
    ]
  },
  {
    "name": "protected open fun validateSignIn(user: T, password: String, custom: Array<Any>): Boolean",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.validateSignIn",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/validate-sign-in.html",
    "searchKeys": [
      "validateSignIn",
      "protected open fun validateSignIn(user: T, password: String, custom: Array<Any>): Boolean",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.validateSignIn"
    ]
  },
  {
    "name": "protected open fun validateSignUp(name: String, surname: String, email: String, password: String, language: String, custom: Array<Any>): String",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.validateSignUp",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/validate-sign-up.html",
    "searchKeys": [
      "validateSignUp",
      "protected open fun validateSignUp(name: String, surname: String, email: String, password: String, language: String, custom: Array<Any>): String",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.validateSignUp"
    ]
  },
  {
    "name": "protected open var containers: HashSet<String>",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.containers",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/containers.html",
    "searchKeys": [
      "containers",
      "protected open var containers: HashSet<String>",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.containers"
    ]
  },
  {
    "name": "protected open var discriminatorValue: String",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.discriminatorValue",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/discriminator-value.html",
    "searchKeys": [
      "discriminatorValue",
      "protected open var discriminatorValue: String",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.discriminatorValue"
    ]
  },
  {
    "name": "protected open var email: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.email",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/email.html",
    "searchKeys": [
      "email",
      "protected open var email: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.email"
    ]
  },
  {
    "name": "protected open var entityManager: EntityManager",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.entityManager",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/entity-manager.html",
    "searchKeys": [
      "entityManager",
      "protected open var entityManager: EntityManager",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.entityManager"
    ]
  },
  {
    "name": "protected open var hostAddress: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.hostAddress",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/host-address.html",
    "searchKeys": [
      "hostAddress",
      "protected open var hostAddress: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.hostAddress"
    ]
  },
  {
    "name": "protected open var jsonHelper: JsonHelper",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.jsonHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/json-helper.html",
    "searchKeys": [
      "jsonHelper",
      "protected open var jsonHelper: JsonHelper",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.jsonHelper"
    ]
  },
  {
    "name": "protected open var language: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.language",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/language.html",
    "searchKeys": [
      "language",
      "protected open var language: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.language"
    ]
  },
  {
    "name": "protected open var me: T",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.me",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/me.html",
    "searchKeys": [
      "me",
      "protected open var me: T",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.me"
    ]
  },
  {
    "name": "protected open var name: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.name",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/name.html",
    "searchKeys": [
      "name",
      "protected open var name: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.name"
    ]
  },
  {
    "name": "protected open var password: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.password",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/password.html",
    "searchKeys": [
      "password",
      "protected open var password: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.password"
    ]
  },
  {
    "name": "protected open var profilePic: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.profilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/profile-pic.html",
    "searchKeys": [
      "profilePic",
      "protected open var profilePic: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.profilePic"
    ]
  },
  {
    "name": "protected open var serverProtector: ServerProtector",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.serverProtector",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/server-protector.html",
    "searchKeys": [
      "serverProtector",
      "protected open var serverProtector: ServerProtector",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.serverProtector"
    ]
  },
  {
    "name": "protected open var surname: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.surname",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/surname.html",
    "searchKeys": [
      "surname",
      "protected open var surname: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.surname"
    ]
  },
  {
    "name": "protected open var theme: EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.theme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/theme.html",
    "searchKeys": [
      "theme",
      "protected open var theme: EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.theme"
    ]
  },
  {
    "name": "protected open var userId: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.userId",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/user-id.html",
    "searchKeys": [
      "userId",
      "protected open var userId: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.userId"
    ]
  },
  {
    "name": "protected open var userToken: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxLocalUser.userToken",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-local-user/user-token.html",
    "searchKeys": [
      "userToken",
      "protected open var userToken: String",
      "com.tecknobit.equinox.environment.records.EquinoxLocalUser.userToken"
    ]
  },
  {
    "name": "protected open var usersRepository: EquinoxUsersRepository<T>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.usersRepository",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/users-repository.html",
    "searchKeys": [
      "usersRepository",
      "protected open var usersRepository: EquinoxUsersRepository<T>",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.usersRepository"
    ]
  },
  {
    "name": "protected val BASE_SIGN_UP_QUERY: String = \"INSERT INTO users(\"",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.BASE_SIGN_UP_QUERY",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-b-a-s-e_-s-i-g-n_-u-p_-q-u-e-r-y.html",
    "searchKeys": [
      "BASE_SIGN_UP_QUERY",
      "protected val BASE_SIGN_UP_QUERY: String = \"INSERT INTO users(\"",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.BASE_SIGN_UP_QUERY"
    ]
  },
  {
    "name": "protected val DEFAULT_USER_VALUES_KEYS: List<String>",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.DEFAULT_USER_VALUES_KEYS",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-d-e-f-a-u-l-t_-u-s-e-r_-v-a-l-u-e-s_-k-e-y-s.html",
    "searchKeys": [
      "DEFAULT_USER_VALUES_KEYS",
      "protected val DEFAULT_USER_VALUES_KEYS: List<String>",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.DEFAULT_USER_VALUES_KEYS"
    ]
  },
  {
    "name": "protected val VALUES_QUERY_PART: String = \" VALUES (\"",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.VALUES_QUERY_PART",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-v-a-l-u-e-s_-q-u-e-r-y_-p-a-r-t.html",
    "searchKeys": [
      "VALUES_QUERY_PART",
      "protected val VALUES_QUERY_PART: String = \" VALUES (\"",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.VALUES_QUERY_PART"
    ]
  },
  {
    "name": "protected val apiRequest: APIRequest",
    "description": "com.tecknobit.equinox.Requester.apiRequest",
    "location": "-equinox/com.tecknobit.equinox/-requester/api-request.html",
    "searchKeys": [
      "apiRequest",
      "protected val apiRequest: APIRequest",
      "com.tecknobit.equinox.Requester.apiRequest"
    ]
  },
  {
    "name": "protected val connectionTimeout: Int",
    "description": "com.tecknobit.equinox.Requester.connectionTimeout",
    "location": "-equinox/com.tecknobit.equinox/-requester/connection-timeout.html",
    "searchKeys": [
      "connectionTimeout",
      "protected val connectionTimeout: Int",
      "com.tecknobit.equinox.Requester.connectionTimeout"
    ]
  },
  {
    "name": "protected val containerDirectory: String",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.containerDirectory",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/container-directory.html",
    "searchKeys": [
      "containerDirectory",
      "protected val containerDirectory: String",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.containerDirectory"
    ]
  },
  {
    "name": "protected val email: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.email",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/email.html",
    "searchKeys": [
      "email",
      "protected val email: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.email"
    ]
  },
  {
    "name": "protected val emailValidator: EmailValidator",
    "description": "com.tecknobit.equinox.inputs.InputValidator.emailValidator",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/email-validator.html",
    "searchKeys": [
      "emailValidator",
      "protected val emailValidator: EmailValidator",
      "com.tecknobit.equinox.inputs.InputValidator.emailValidator"
    ]
  },
  {
    "name": "protected val enableCertificatesValidation: Boolean = false",
    "description": "com.tecknobit.equinox.Requester.enableCertificatesValidation",
    "location": "-equinox/com.tecknobit.equinox/-requester/enable-certificates-validation.html",
    "searchKeys": [
      "enableCertificatesValidation",
      "protected val enableCertificatesValidation: Boolean = false",
      "com.tecknobit.equinox.Requester.enableCertificatesValidation"
    ]
  },
  {
    "name": "protected val hItem: JsonHelper",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.hItem",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/h-item.html",
    "searchKeys": [
      "hItem",
      "protected val hItem: JsonHelper",
      "com.tecknobit.equinox.environment.records.EquinoxItem.hItem"
    ]
  },
  {
    "name": "protected val headers: APIRequest.Headers",
    "description": "com.tecknobit.equinox.Requester.headers",
    "location": "-equinox/com.tecknobit.equinox/-requester/headers.html",
    "searchKeys": [
      "headers",
      "protected val headers: APIRequest.Headers",
      "com.tecknobit.equinox.Requester.headers"
    ]
  },
  {
    "name": "protected val id: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.id",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/id.html",
    "searchKeys": [
      "id",
      "protected val id: String",
      "com.tecknobit.equinox.environment.records.EquinoxItem.id"
    ]
  },
  {
    "name": "protected val language: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.language",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/language.html",
    "searchKeys": [
      "language",
      "protected val language: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.language"
    ]
  },
  {
    "name": "protected val mantis: Mantis",
    "description": "com.tecknobit.equinox.Requester.mantis",
    "location": "-equinox/com.tecknobit.equinox/-requester/mantis.html",
    "searchKeys": [
      "mantis",
      "protected val mantis: Mantis",
      "com.tecknobit.equinox.Requester.mantis"
    ]
  },
  {
    "name": "protected val mantis: Mantis",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.mantis",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/mantis.html",
    "searchKeys": [
      "mantis",
      "protected val mantis: Mantis",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.mantis"
    ]
  },
  {
    "name": "protected val name: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.name",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/name.html",
    "searchKeys": [
      "name",
      "protected val name: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.name"
    ]
  },
  {
    "name": "protected val password: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.password",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/password.html",
    "searchKeys": [
      "password",
      "protected val password: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.password"
    ]
  },
  {
    "name": "protected val profilePic: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.profilePic",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/profile-pic.html",
    "searchKeys": [
      "profilePic",
      "protected val profilePic: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.profilePic"
    ]
  },
  {
    "name": "protected val subDirectories: List<String>",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.subDirectories",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/sub-directories.html",
    "searchKeys": [
      "subDirectories",
      "protected val subDirectories: List<String>",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.subDirectories"
    ]
  },
  {
    "name": "protected val surname: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.surname",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/surname.html",
    "searchKeys": [
      "surname",
      "protected val surname: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.surname"
    ]
  },
  {
    "name": "protected val theme: EquinoxUser.ApplicationTheme",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.theme",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/theme.html",
    "searchKeys": [
      "theme",
      "protected val theme: EquinoxUser.ApplicationTheme",
      "com.tecknobit.equinox.environment.records.EquinoxUser.theme"
    ]
  },
  {
    "name": "protected val timeFormatter: TimeFormatter",
    "description": "com.tecknobit.equinox.Requester.timeFormatter",
    "location": "-equinox/com.tecknobit.equinox/-requester/time-formatter.html",
    "searchKeys": [
      "timeFormatter",
      "protected val timeFormatter: TimeFormatter",
      "com.tecknobit.equinox.Requester.timeFormatter"
    ]
  },
  {
    "name": "protected val timeFormatter: TimeFormatter",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.timeFormatter",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/time-formatter.html",
    "searchKeys": [
      "timeFormatter",
      "protected val timeFormatter: TimeFormatter",
      "com.tecknobit.equinox.environment.records.EquinoxItem.timeFormatter"
    ]
  },
  {
    "name": "protected val token: String",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.token",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/token.html",
    "searchKeys": [
      "token",
      "protected val token: String",
      "com.tecknobit.equinox.environment.records.EquinoxUser.token"
    ]
  },
  {
    "name": "protected val urlValidator: UrlValidator",
    "description": "com.tecknobit.equinox.inputs.InputValidator.urlValidator",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/url-validator.html",
    "searchKeys": [
      "urlValidator",
      "protected val urlValidator: UrlValidator",
      "com.tecknobit.equinox.inputs.InputValidator.urlValidator"
    ]
  },
  {
    "name": "protected val usersHelper: EquinoxUsersHelper<T>",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.usersHelper",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-users-controller/users-helper.html",
    "searchKeys": [
      "usersHelper",
      "protected val usersHelper: EquinoxUsersHelper<T>",
      "com.tecknobit.equinox.environment.controllers.EquinoxUsersController.usersHelper"
    ]
  },
  {
    "name": "protected var debugMode: Boolean",
    "description": "com.tecknobit.equinox.Requester.debugMode",
    "location": "-equinox/com.tecknobit.equinox/-requester/debug-mode.html",
    "searchKeys": [
      "debugMode",
      "protected var debugMode: Boolean",
      "com.tecknobit.equinox.Requester.debugMode"
    ]
  },
  {
    "name": "protected var host: String",
    "description": "com.tecknobit.equinox.Requester.host",
    "location": "-equinox/com.tecknobit.equinox/-requester/host.html",
    "searchKeys": [
      "host",
      "protected var host: String",
      "com.tecknobit.equinox.Requester.host"
    ]
  },
  {
    "name": "protected var mustValidateCertificates: Boolean",
    "description": "com.tecknobit.equinox.Requester.mustValidateCertificates",
    "location": "-equinox/com.tecknobit.equinox/-requester/must-validate-certificates.html",
    "searchKeys": [
      "mustValidateCertificates",
      "protected var mustValidateCertificates: Boolean",
      "com.tecknobit.equinox.Requester.mustValidateCertificates"
    ]
  },
  {
    "name": "protected var userId: String?",
    "description": "com.tecknobit.equinox.Requester.userId",
    "location": "-equinox/com.tecknobit.equinox/-requester/user-id.html",
    "searchKeys": [
      "userId",
      "protected var userId: String?",
      "com.tecknobit.equinox.Requester.userId"
    ]
  },
  {
    "name": "protected var userToken: String?",
    "description": "com.tecknobit.equinox.Requester.userToken",
    "location": "-equinox/com.tecknobit.equinox/-requester/user-token.html",
    "searchKeys": [
      "userToken",
      "protected var userToken: String?",
      "com.tecknobit.equinox.Requester.userToken"
    ]
  },
  {
    "name": "val BASE_EQUINOX_ENDPOINT: String = \"/api/v1/\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.BASE_EQUINOX_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-b-a-s-e_-e-q-u-i-n-o-x_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "BASE_EQUINOX_ENDPOINT",
      "val BASE_EQUINOX_ENDPOINT: String = \"/api/v1/\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.BASE_EQUINOX_ENDPOINT"
    ]
  },
  {
    "name": "val CHANGE_EMAIL_ENDPOINT: String = \"/changeEmail\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_EMAIL_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-c-h-a-n-g-e_-e-m-a-i-l_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "CHANGE_EMAIL_ENDPOINT",
      "val CHANGE_EMAIL_ENDPOINT: String = \"/changeEmail\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_EMAIL_ENDPOINT"
    ]
  },
  {
    "name": "val CHANGE_LANGUAGE_ENDPOINT: String = \"/changeLanguage\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_LANGUAGE_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-c-h-a-n-g-e_-l-a-n-g-u-a-g-e_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "CHANGE_LANGUAGE_ENDPOINT",
      "val CHANGE_LANGUAGE_ENDPOINT: String = \"/changeLanguage\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_LANGUAGE_ENDPOINT"
    ]
  },
  {
    "name": "val CHANGE_PASSWORD_ENDPOINT: String = \"/changePassword\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_PASSWORD_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-c-h-a-n-g-e_-p-a-s-s-w-o-r-d_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "CHANGE_PASSWORD_ENDPOINT",
      "val CHANGE_PASSWORD_ENDPOINT: String = \"/changePassword\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_PASSWORD_ENDPOINT"
    ]
  },
  {
    "name": "val CHANGE_PROFILE_PIC_ENDPOINT: String = \"/changeProfilePic\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_PROFILE_PIC_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-c-h-a-n-g-e_-p-r-o-f-i-l-e_-p-i-c_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "CHANGE_PROFILE_PIC_ENDPOINT",
      "val CHANGE_PROFILE_PIC_ENDPOINT: String = \"/changeProfilePic\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.CHANGE_PROFILE_PIC_ENDPOINT"
    ]
  },
  {
    "name": "val COMMA: String = \",\"",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.COMMA",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-c-o-m-m-a.html",
    "searchKeys": [
      "COMMA",
      "val COMMA: String = \",\"",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.COMMA"
    ]
  },
  {
    "name": "val CUSTOM_CONFIGURATION_FILE_PATH: String = \"custom.properties\"",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.CUSTOM_CONFIGURATION_FILE_PATH",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/-c-u-s-t-o-m_-c-o-n-f-i-g-u-r-a-t-i-o-n_-f-i-l-e_-p-a-t-h.html",
    "searchKeys": [
      "CUSTOM_CONFIGURATION_FILE_PATH",
      "val CUSTOM_CONFIGURATION_FILE_PATH: String = \"custom.properties\"",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.CUSTOM_CONFIGURATION_FILE_PATH"
    ]
  },
  {
    "name": "val DEFAULT_CONFIGURATION_FILE_PATH: String = \"app.properties\"",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesProvider.DEFAULT_CONFIGURATION_FILE_PATH",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-provider/-d-e-f-a-u-l-t_-c-o-n-f-i-g-u-r-a-t-i-o-n_-f-i-l-e_-p-a-t-h.html",
    "searchKeys": [
      "DEFAULT_CONFIGURATION_FILE_PATH",
      "val DEFAULT_CONFIGURATION_FILE_PATH: String = \"app.properties\"",
      "com.tecknobit.equinox.resourcesutils.ResourcesProvider.DEFAULT_CONFIGURATION_FILE_PATH"
    ]
  },
  {
    "name": "val DEFAULT_LANGUAGE: String = \"en\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.DEFAULT_LANGUAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-d-e-f-a-u-l-t_-l-a-n-g-u-a-g-e.html",
    "searchKeys": [
      "DEFAULT_LANGUAGE",
      "val DEFAULT_LANGUAGE: String = \"en\"",
      "com.tecknobit.equinox.inputs.InputValidator.DEFAULT_LANGUAGE"
    ]
  },
  {
    "name": "val DEFAULT_PROFILE_PIC: String = \"profiles/defProfilePic.png\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.DEFAULT_PROFILE_PIC",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-d-e-f-a-u-l-t_-p-r-o-f-i-l-e_-p-i-c.html",
    "searchKeys": [
      "DEFAULT_PROFILE_PIC",
      "val DEFAULT_PROFILE_PIC: String = \"profiles/defProfilePic.png\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.DEFAULT_PROFILE_PIC"
    ]
  },
  {
    "name": "val DISCRIMINATOR_VALUE_KEY: String = \"dtype\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.DISCRIMINATOR_VALUE_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/-d-i-s-c-r-i-m-i-n-a-t-o-r_-v-a-l-u-e_-k-e-y.html",
    "searchKeys": [
      "DISCRIMINATOR_VALUE_KEY",
      "val DISCRIMINATOR_VALUE_KEY: String = \"dtype\"",
      "com.tecknobit.equinox.environment.records.EquinoxItem.DISCRIMINATOR_VALUE_KEY"
    ]
  },
  {
    "name": "val EMAIL_KEY: String = \"email\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.EMAIL_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-e-m-a-i-l_-k-e-y.html",
    "searchKeys": [
      "EMAIL_KEY",
      "val EMAIL_KEY: String = \"email\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.EMAIL_KEY"
    ]
  },
  {
    "name": "val EMAIL_MAX_LENGTH: Int = 75",
    "description": "com.tecknobit.equinox.inputs.InputValidator.EMAIL_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-e-m-a-i-l_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "EMAIL_MAX_LENGTH",
      "val EMAIL_MAX_LENGTH: Int = 75",
      "com.tecknobit.equinox.inputs.InputValidator.EMAIL_MAX_LENGTH"
    ]
  },
  {
    "name": "val HOST_ADDRESS_KEY: String = \"host_address\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.HOST_ADDRESS_KEY",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-h-o-s-t_-a-d-d-r-e-s-s_-k-e-y.html",
    "searchKeys": [
      "HOST_ADDRESS_KEY",
      "val HOST_ADDRESS_KEY: String = \"host_address\"",
      "com.tecknobit.equinox.inputs.InputValidator.HOST_ADDRESS_KEY"
    ]
  },
  {
    "name": "val IDENTIFIER_KEY: String = \"id\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxItem.IDENTIFIER_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-item/-i-d-e-n-t-i-f-i-e-r_-k-e-y.html",
    "searchKeys": [
      "IDENTIFIER_KEY",
      "val IDENTIFIER_KEY: String = \"id\"",
      "com.tecknobit.equinox.environment.records.EquinoxItem.IDENTIFIER_KEY"
    ]
  },
  {
    "name": "val LANGUAGES_SUPPORTED: HashMap<String, String>",
    "description": "com.tecknobit.equinox.inputs.InputValidator.LANGUAGES_SUPPORTED",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-l-a-n-g-u-a-g-e-s_-s-u-p-p-o-r-t-e-d.html",
    "searchKeys": [
      "LANGUAGES_SUPPORTED",
      "val LANGUAGES_SUPPORTED: HashMap<String, String>",
      "com.tecknobit.equinox.inputs.InputValidator.LANGUAGES_SUPPORTED"
    ]
  },
  {
    "name": "val LANGUAGE_KEY: String = \"language\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.LANGUAGE_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-l-a-n-g-u-a-g-e_-k-e-y.html",
    "searchKeys": [
      "LANGUAGE_KEY",
      "val LANGUAGE_KEY: String = \"language\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.LANGUAGE_KEY"
    ]
  },
  {
    "name": "val MAX_REVENUE_LABELS_NUMBER: Int = 5",
    "description": "com.tecknobit.equinox.inputs.InputValidator.MAX_REVENUE_LABELS_NUMBER",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-m-a-x_-r-e-v-e-n-u-e_-l-a-b-e-l-s_-n-u-m-b-e-r.html",
    "searchKeys": [
      "MAX_REVENUE_LABELS_NUMBER",
      "val MAX_REVENUE_LABELS_NUMBER: Int = 5",
      "com.tecknobit.equinox.inputs.InputValidator.MAX_REVENUE_LABELS_NUMBER"
    ]
  },
  {
    "name": "val NAME_KEY: String = \"name\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.NAME_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-n-a-m-e_-k-e-y.html",
    "searchKeys": [
      "NAME_KEY",
      "val NAME_KEY: String = \"name\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.NAME_KEY"
    ]
  },
  {
    "name": "val NAME_MAX_LENGTH: Int = 20",
    "description": "com.tecknobit.equinox.inputs.InputValidator.NAME_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-n-a-m-e_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "NAME_MAX_LENGTH",
      "val NAME_MAX_LENGTH: Int = 20",
      "com.tecknobit.equinox.inputs.InputValidator.NAME_MAX_LENGTH"
    ]
  },
  {
    "name": "val NOT_AUTHORIZED_OR_WRONG_DETAILS_MESSAGE: String = \"not_authorized_key\"",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.NOT_AUTHORIZED_OR_WRONG_DETAILS_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/-n-o-t_-a-u-t-h-o-r-i-z-e-d_-o-r_-w-r-o-n-g_-d-e-t-a-i-l-s_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "NOT_AUTHORIZED_OR_WRONG_DETAILS_MESSAGE",
      "val NOT_AUTHORIZED_OR_WRONG_DETAILS_MESSAGE: String = \"not_authorized_key\"",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.NOT_AUTHORIZED_OR_WRONG_DETAILS_MESSAGE"
    ]
  },
  {
    "name": "val PASSWORD_KEY: String = \"password\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.PASSWORD_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-p-a-s-s-w-o-r-d_-k-e-y.html",
    "searchKeys": [
      "PASSWORD_KEY",
      "val PASSWORD_KEY: String = \"password\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.PASSWORD_KEY"
    ]
  },
  {
    "name": "val PASSWORD_MAX_LENGTH: Int = 32",
    "description": "com.tecknobit.equinox.inputs.InputValidator.PASSWORD_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-p-a-s-s-w-o-r-d_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "PASSWORD_MAX_LENGTH",
      "val PASSWORD_MAX_LENGTH: Int = 32",
      "com.tecknobit.equinox.inputs.InputValidator.PASSWORD_MAX_LENGTH"
    ]
  },
  {
    "name": "val PASSWORD_MIN_LENGTH: Int = 8",
    "description": "com.tecknobit.equinox.inputs.InputValidator.PASSWORD_MIN_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-p-a-s-s-w-o-r-d_-m-i-n_-l-e-n-g-t-h.html",
    "searchKeys": [
      "PASSWORD_MIN_LENGTH",
      "val PASSWORD_MIN_LENGTH: Int = 8",
      "com.tecknobit.equinox.inputs.InputValidator.PASSWORD_MIN_LENGTH"
    ]
  },
  {
    "name": "val PROFILES_DIRECTORY: String = \"profiles\"",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.PROFILES_DIRECTORY",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/-p-r-o-f-i-l-e-s_-d-i-r-e-c-t-o-r-y.html",
    "searchKeys": [
      "PROFILES_DIRECTORY",
      "val PROFILES_DIRECTORY: String = \"profiles\"",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.PROFILES_DIRECTORY"
    ]
  },
  {
    "name": "val PROFILE_PIC_KEY: String = \"profile_pic\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.PROFILE_PIC_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-p-r-o-f-i-l-e_-p-i-c_-k-e-y.html",
    "searchKeys": [
      "PROFILE_PIC_KEY",
      "val PROFILE_PIC_KEY: String = \"profile_pic\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.PROFILE_PIC_KEY"
    ]
  },
  {
    "name": "val RESOURCES_KEY: String = \"resources\"",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.RESOURCES_KEY",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/-r-e-s-o-u-r-c-e-s_-k-e-y.html",
    "searchKeys": [
      "RESOURCES_KEY",
      "val RESOURCES_KEY: String = \"resources\"",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.RESOURCES_KEY"
    ]
  },
  {
    "name": "val RESOURCES_PATH: String = \"resources/\"",
    "description": "com.tecknobit.equinox.resourcesutils.ResourcesManager.RESOURCES_PATH",
    "location": "-equinox/com.tecknobit.equinox.resourcesutils/-resources-manager/-r-e-s-o-u-r-c-e-s_-p-a-t-h.html",
    "searchKeys": [
      "RESOURCES_PATH",
      "val RESOURCES_PATH: String = \"resources/\"",
      "com.tecknobit.equinox.resourcesutils.ResourcesManager.RESOURCES_PATH"
    ]
  },
  {
    "name": "val RESPONSE_SUCCESSFUL_MESSAGE: String = \"operation_executed_successfully_key\"",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.RESPONSE_SUCCESSFUL_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/-r-e-s-p-o-n-s-e_-s-u-c-c-e-s-s-f-u-l_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "RESPONSE_SUCCESSFUL_MESSAGE",
      "val RESPONSE_SUCCESSFUL_MESSAGE: String = \"operation_executed_successfully_key\"",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.RESPONSE_SUCCESSFUL_MESSAGE"
    ]
  },
  {
    "name": "val REVENUE_DESCRIPTION_MAX_LENGTH: Int = 250",
    "description": "com.tecknobit.equinox.inputs.InputValidator.REVENUE_DESCRIPTION_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-r-e-v-e-n-u-e_-d-e-s-c-r-i-p-t-i-o-n_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "REVENUE_DESCRIPTION_MAX_LENGTH",
      "val REVENUE_DESCRIPTION_MAX_LENGTH: Int = 250",
      "com.tecknobit.equinox.inputs.InputValidator.REVENUE_DESCRIPTION_MAX_LENGTH"
    ]
  },
  {
    "name": "val REVENUE_TITLE_MAX_LENGTH: Int = 30",
    "description": "com.tecknobit.equinox.inputs.InputValidator.REVENUE_TITLE_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-r-e-v-e-n-u-e_-t-i-t-l-e_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "REVENUE_TITLE_MAX_LENGTH",
      "val REVENUE_TITLE_MAX_LENGTH: Int = 30",
      "com.tecknobit.equinox.inputs.InputValidator.REVENUE_TITLE_MAX_LENGTH"
    ]
  },
  {
    "name": "val ROUND_BRACKET: String = \")\"",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.ROUND_BRACKET",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-r-o-u-n-d_-b-r-a-c-k-e-t.html",
    "searchKeys": [
      "ROUND_BRACKET",
      "val ROUND_BRACKET: String = \")\"",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.ROUND_BRACKET"
    ]
  },
  {
    "name": "val SIGN_IN_ENDPOINT: String = \"users/signIn\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.SIGN_IN_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-s-i-g-n_-i-n_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "SIGN_IN_ENDPOINT",
      "val SIGN_IN_ENDPOINT: String = \"users/signIn\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.SIGN_IN_ENDPOINT"
    ]
  },
  {
    "name": "val SIGN_UP_ENDPOINT: String = \"users/signUp\"",
    "description": "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.SIGN_UP_ENDPOINT",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers/-equinox-base-endpoints-set/-s-i-g-n_-u-p_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "SIGN_UP_ENDPOINT",
      "val SIGN_UP_ENDPOINT: String = \"users/signUp\"",
      "com.tecknobit.equinox.environment.helpers.EquinoxBaseEndpointsSet.SIGN_UP_ENDPOINT"
    ]
  },
  {
    "name": "val SINGLE_QUOTE: String = \"'\"",
    "description": "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.SINGLE_QUOTE",
    "location": "-equinox/com.tecknobit.equinox.environment.helpers.services/-equinox-users-helper/-s-i-n-g-l-e_-q-u-o-t-e.html",
    "searchKeys": [
      "SINGLE_QUOTE",
      "val SINGLE_QUOTE: String = \"'\"",
      "com.tecknobit.equinox.environment.helpers.services.EquinoxUsersHelper.SINGLE_QUOTE"
    ]
  },
  {
    "name": "val SURNAME_KEY: String = \"surname\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.SURNAME_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-s-u-r-n-a-m-e_-k-e-y.html",
    "searchKeys": [
      "SURNAME_KEY",
      "val SURNAME_KEY: String = \"surname\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.SURNAME_KEY"
    ]
  },
  {
    "name": "val SURNAME_MAX_LENGTH: Int = 30",
    "description": "com.tecknobit.equinox.inputs.InputValidator.SURNAME_MAX_LENGTH",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-s-u-r-n-a-m-e_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "SURNAME_MAX_LENGTH",
      "val SURNAME_MAX_LENGTH: Int = 30",
      "com.tecknobit.equinox.inputs.InputValidator.SURNAME_MAX_LENGTH"
    ]
  },
  {
    "name": "val THEME_KEY: String = \"theme\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.THEME_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-t-h-e-m-e_-k-e-y.html",
    "searchKeys": [
      "THEME_KEY",
      "val THEME_KEY: String = \"theme\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.THEME_KEY"
    ]
  },
  {
    "name": "val TOKEN_KEY: String = \"token\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.TOKEN_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-t-o-k-e-n_-k-e-y.html",
    "searchKeys": [
      "TOKEN_KEY",
      "val TOKEN_KEY: String = \"token\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.TOKEN_KEY"
    ]
  },
  {
    "name": "val USERS_KEY: String = \"users\"",
    "description": "com.tecknobit.equinox.environment.records.EquinoxUser.USERS_KEY",
    "location": "-equinox/com.tecknobit.equinox.environment.records/-equinox-user/-u-s-e-r-s_-k-e-y.html",
    "searchKeys": [
      "USERS_KEY",
      "val USERS_KEY: String = \"users\"",
      "com.tecknobit.equinox.environment.records.EquinoxUser.USERS_KEY"
    ]
  },
  {
    "name": "val WRONG_CURRENCY_MESSAGE: String = \"wrong_currency_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_CURRENCY_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-c-u-r-r-e-n-c-y_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_CURRENCY_MESSAGE",
      "val WRONG_CURRENCY_MESSAGE: String = \"wrong_currency_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_CURRENCY_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_EMAIL_MESSAGE: String = \"wrong_email_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_EMAIL_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-e-m-a-i-l_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_EMAIL_MESSAGE",
      "val WRONG_EMAIL_MESSAGE: String = \"wrong_email_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_EMAIL_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_LANGUAGE_MESSAGE: String = \"wrong_language_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_LANGUAGE_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-l-a-n-g-u-a-g-e_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_LANGUAGE_MESSAGE",
      "val WRONG_LANGUAGE_MESSAGE: String = \"wrong_language_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_LANGUAGE_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_NAME_MESSAGE: String = \"wrong_name_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_NAME_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-n-a-m-e_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_NAME_MESSAGE",
      "val WRONG_NAME_MESSAGE: String = \"wrong_name_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_NAME_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_PASSWORD_MESSAGE: String = \"wrong_password_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_PASSWORD_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-p-a-s-s-w-o-r-d_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_PASSWORD_MESSAGE",
      "val WRONG_PASSWORD_MESSAGE: String = \"wrong_password_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_PASSWORD_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_PROCEDURE_MESSAGE: String = \"wrong_procedure_key\"",
    "description": "com.tecknobit.equinox.environment.controllers.EquinoxController.WRONG_PROCEDURE_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.environment.controllers/-equinox-controller/-w-r-o-n-g_-p-r-o-c-e-d-u-r-e_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_PROCEDURE_MESSAGE",
      "val WRONG_PROCEDURE_MESSAGE: String = \"wrong_procedure_key\"",
      "com.tecknobit.equinox.environment.controllers.EquinoxController.WRONG_PROCEDURE_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_SURNAME_MESSAGE: String = \"wrong_surname_key\"",
    "description": "com.tecknobit.equinox.inputs.InputValidator.WRONG_SURNAME_MESSAGE",
    "location": "-equinox/com.tecknobit.equinox.inputs/-input-validator/-w-r-o-n-g_-s-u-r-n-a-m-e_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_SURNAME_MESSAGE",
      "val WRONG_SURNAME_MESSAGE: String = \"wrong_surname_key\"",
      "com.tecknobit.equinox.inputs.InputValidator.WRONG_SURNAME_MESSAGE"
    ]
  },
  {
    "name": "val currentContext: Class<*>",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine.currentContext",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/current-context.html",
    "searchKeys": [
      "currentContext",
      "val currentContext: Class<*>",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine.currentContext"
    ]
  },
  {
    "name": "val refreshDelay: Long = 1000",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine.refreshDelay",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/refresh-delay.html",
    "searchKeys": [
      "refreshDelay",
      "val refreshDelay: Long = 1000",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine.refreshDelay"
    ]
  },
  {
    "name": "val repeatRoutine: Boolean = true",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine.repeatRoutine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/repeat-routine.html",
    "searchKeys": [
      "repeatRoutine",
      "val repeatRoutine: Boolean = true",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine.repeatRoutine"
    ]
  },
  {
    "name": "val routine: () -> Unit",
    "description": "com.tecknobit.equinox.FetcherManager.FetcherRoutine.routine",
    "location": "-equinox/com.tecknobit.equinox/-fetcher-manager/-fetcher-routine/routine.html",
    "searchKeys": [
      "routine",
      "val routine: () -> Unit",
      "com.tecknobit.equinox.FetcherManager.FetcherRoutine.routine"
    ]
  }
]
